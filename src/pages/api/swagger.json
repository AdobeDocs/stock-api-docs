{
  "swagger": "2.0",
  "info": {
    "title": "AdobeStock API",
    "description": "See details <a href='https://wiki.corp.adobe.com/display/adobestock/Stock+APIs'>here</a>.",
    "version": "1.0.0"
  },
  "basePath": "/Rest",
  "schemes": [
    "https"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/Libraries/1/Content/Info": {
      "get": {
        "tags": [
          "Libraries"
        ],
        "summary": "Retrieve license info for a given asset",
        "responses": {
          "200": {
            "description": "License details",
            "schema": {
              "$ref": "#/definitions/Response.BuyerPurchase"
            }
          },
          "403": {
            "description": "Content type not allowed",
            "schema": {
              "$ref": "#/definitions/Response.Error"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/Parameter.Header.Authorization.Required"
        },
        {
          "$ref": "#/parameters/Parameter.Header.Product"
        },
        {
          "$ref": "#/parameters/Parameter.Header.ProductLocation"
        },
        {
          "$ref": "#/parameters/Parameter.Header.ApiKey"
        },
        {
          "$ref": "#/parameters/Parameter.Header.RequestId"
        },
        {
          "$ref": "#/parameters/Parameter.Get.ContentId"
        },
        {
          "$ref": "#/parameters/Parameter.Get.License"
        }
      ]
    },
    "/Libraries/1/Content/License": {
      "get": {
        "tags": [
          "Libraries"
        ],
        "summary": "License an asset with a specific license type",
        "parameters": [
          {
            "$ref": "#/parameters/Parameter.Header.Authorization.Required"
          },
          {
            "$ref": "#/parameters/Parameter.Header.ApiKey"
          },
          {
            "$ref": "#/parameters/Parameter.Header.Product.Optional"
          },
          {
            "$ref": "#/parameters/Parameter.Header.ProductLocation"
          },
          {
            "$ref": "#/parameters/Parameter.Get.ContentId"
          },
          {
            "$ref": "#/parameters/Parameter.Get.License"
          },
          {
            "name": "license_again",
            "in": "query",
            "description": "Should the asset be licensed again if it has already been licensed",
            "required": false,
            "type": "string",
            "default": 0,
            "enum": [
              "",
              "0",
              "1",
              "true",
              "false"
            ]
          },
          {
            "$ref": "#/parameters/Parameter.Get.Locale"
          }
        ],
        "responses": {
          "200": {
            "description": "License details",
            "schema": {
              "$ref": "#/definitions/Response.BuyerPurchase"
            }
          },
          "400": {
            "description": "Unable to process libraries request at this time",
            "schema": {
              "$ref": "#/definitions/Response.Error"
            }
          },
          "403": {
            "description": "Missing mandatory license reference",
            "schema": {
              "$ref": "#/definitions/Response.Error"
            }
          },
          "404": {
            "description": "Content metadata not found, Content is no longer available",
            "schema": {
              "$ref": "#/definitions/Response.Error"
            }
          },
          "500": {
            "description": "Wrong size found, The file does not support this license",
            "schema": {
              "$ref": "#/definitions/Response.Error"
            }
          },
          "503": {
            "description": "Purchases currently unavailable, The file does not support this license, You cannot license this asset type with your current plan",
            "schema": {
              "$ref": "#/definitions/Response.Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Libraries"
        ],
        "summary": "License an asset with a specific license type",
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Parameter.Header.Authorization.Required"
          },
          {
            "$ref": "#/parameters/Parameter.Header.ApiKey"
          },
          {
            "$ref": "#/parameters/Parameter.Header.Product.Optional"
          },
          {
            "$ref": "#/parameters/Parameter.Header.ProductLocation"
          },
          {
            "$ref": "#/parameters/Parameter.Post.ContentId"
          },
          {
            "$ref": "#/parameters/Parameter.Post.License"
          },
          {
            "name": "license_again",
            "in": "formData",
            "description": "Should the asset be licensed again if it has already been licensed",
            "required": false,
            "type": "string",
            "default": 0,
            "enum": [
              "",
              "0",
              "1"
            ]
          },
          {
            "$ref": "#/parameters/Parameter.Post.Locale"
          }
        ],
        "responses": {
          "200": {
            "description": "License details",
            "schema": {
              "$ref": "#/definitions/Response.BuyerPurchase"
            }
          },
          "403": {
            "description": "Missing mandatory license reference",
            "schema": {
              "$ref": "#/definitions/Response.Error"
            }
          },
          "404": {
            "description": "Content metadata not found, Content is no longer available",
            "schema": {
              "$ref": "#/definitions/Response.Error"
            }
          },
          "500": {
            "description": "Wrong size found, The file does not support this license",
            "schema": {
              "$ref": "#/definitions/Response.Error"
            }
          },
          "503": {
            "description": "Purchases currently unavailable, The file does not support this license, You cannot license this asset type with your current plan",
            "schema": {
              "$ref": "#/definitions/Response.Error"
            }
          }
        }
      }
    },
    "/Libraries/1/Member/Profile": {
      "get": {
        "tags": [
          "Libraries"
        ],
        "summary": "Return licensing capabilities for a specific user.",
        "responses": {
          "200": {
            "description": "Return licensing capabilities for a specific user",
            "schema": {
              "$ref": "#/definitions/Response.Buyer"
            }
          },
          "503": {
            "description": "Purchases currently unavailable",
            "schema": {
              "$ref": "#/definitions/Response.Error"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/Parameter.Header.Authorization.Required"
        },
        {
          "$ref": "#/parameters/Parameter.Header.ApiKey"
        },
        {
          "$ref": "#/parameters/Parameter.Header.Product"
        },
        {
          "$ref": "#/parameters/Parameter.Header.ProductLocation"
        },
        {
          "$ref": "#/parameters/Parameter.Get.ContentId.Optional"
        },
        {
          "name": "format",
          "in": "query",
          "description": "Include the format value in response ",
          "required": false,
          "type": "string",
          "enum": [
            "",
            "message_ccx",
            "message_licensing_panel"
          ]
        },
        {
          "$ref": "#/parameters/Parameter.Get.Locale"
        }
      ]
    },
    "/Libraries/1/Member/LicenseHistory": {
      "get": {
        "tags": [
          "Libraries"
        ],
        "summary": "This function is used to retrive the license history for an user",
        "responses": {
          "200": {
            "description": "Return license history for the current user",
            "schema": {
              "$ref": "#/definitions/Response.UserLicenseHistory"
            }
          },
          "400": {
            "description": "Unsupported result column",
            "schema": {
              "$ref": "#/definitions/Response.Error"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/Parameter.Header.Authorization.Required"
        },
        {
          "$ref": "#/parameters/Parameter.Header.Product"
        },
        {
          "$ref": "#/parameters/Parameter.Header.ProductLocation"
        },
        {
          "$ref": "#/parameters/Parameter.Header.ApiKey"
        },
        {
          "$ref": "#/parameters/Parameter.Header.RequestId"
        },
        {
          "name": "result_columns",
          "in": "query",
          "description": "List of columns to show in response",
          "required": false,
          "type": "array",
          "items": {
            "type": "string"
          },
          "enum": [
            "id",
            "title",
            "creator_name",
            "creator_id",
            "content_url",
            "media_type_id",
            "vector_type",
            "content_type",
            "height",
            "width"
          ]
        },
        {
          "name": "search_parameters[limit]",
          "in": "query",
          "description": "Maximum number of media returned",
          "type": "string",
          "default": "32"
        },
        {
          "name": "search_parameters[offset]",
          "in": "query",
          "description": "Start position in query",
          "type": "string",
          "default": "0"
        },
        {
          "name": "search_parameters[thumbnail_size]",
          "in": "query",
          "description": "Thumbnail size (px)",
          "type": "integer",
          "default": 400,
          "enum": [
            110,
            160,
            400
          ]
        },
        {
          "name": "all",
          "in": "query",
          "description": "Request all license history of the member's organization",
          "required": false,
          "type": "string"
        },
        {
          "$ref": "#/parameters/Parameter.Get.Locale"
        }
      ]
    },
    "/Libraries/2/Member/LicenseHistory": {
      "get": {
        "tags": [
          "Libraries"
        ],
        "summary": "License history Endpoint",
        "responses": {
          "200": {
            "description": "Return license history for the current user",
            "schema": {
              "$ref": "#/definitions/Response.UserLicenseHistoryV2"
            }
          },
          "400": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Response.Error"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/Parameter.Header.Authorization.Required"
        },
        {
          "$ref": "#/parameters/Parameter.Header.ApiKey"
        },
        {
          "$ref": "#/parameters/Parameter.Header.RequestId"
        },
        {
          "$ref": "#/parameters/Parameter.Get.OrganizationMode"
        },
        {
          "$ref": "#/parameters/Parameter.Get.OrganizationId"
        },
        {
          "$ref": "#/parameters/Parameter.Get.DateOrder"
        },
        {
          "$ref": "#/parameters/Parameter.Get.OrderType"
        },
        {
          "$ref": "#/parameters/Parameter.Get.Order"
        },
        {
          "$ref": "#/parameters/Parameter.Get.FilterCountry"
        },
        {
          "$ref": "#/parameters/Parameter.Get.FilterDepartment"
        },
        {
          "$ref": "#/parameters/Parameter.Get.FilterIsbn"
        },
        {
          "$ref": "#/parameters/Parameter.Get.FilterPurchaseOrder"
        },
        {
          "$ref": "#/parameters/Parameter.Get.FilterCostCenter"
        },
        {
          "$ref": "#/parameters/Parameter.Get.FilterCustomerReference"
        },
        {
          "$ref": "#/parameters/Parameter.Get.FilterCustomerName"
        },
        {
          "$ref": "#/parameters/Parameter.Get.FilterProjectRef"
        },
        {
          "$ref": "#/parameters/Parameter.Get.FilterProjectName"
        },
        {
          "$ref": "#/parameters/Parameter.Get.FilterUsers"
        },
        {
          "$ref": "#/parameters/Parameter.Get.FilterGroup"
        },
        {
          "$ref": "#/parameters/Parameter.Get.FilterGenericLicense"
        },
        {
          "$ref": "#/parameters/Parameter.Get.FilterContentType"
        },
        {
          "$ref": "#/parameters/Parameter.Get.FilterEndingDate"
        },
        {
          "$ref": "#/parameters/Parameter.Get.FilterStartingDate"
        },
        {
          "$ref": "#/parameters/Parameter.Get.limit"
        },
        {
          "$ref": "#/parameters/Parameter.Get.PageNumber"
        },
        {
          "$ref": "#/parameters/Parameter.Get.Locale"
        }
      ]
    },
    "/Libraries/1/Member/Abandon": {
      "get": {
        "tags": [
          "Libraries"
        ],
        "summary": "Abandon a licensing operation",
        "responses": {
          "204": {
            "description": "Abandon Member"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/Parameter.Header.Authorization.Required"
        },
        {
          "$ref": "#/parameters/Parameter.Header.Product"
        },
        {
          "$ref": "#/parameters/Parameter.Header.ProductLocation"
        },
        {
          "$ref": "#/parameters/Parameter.Header.ApiKey"
        },
        {
          "$ref": "#/parameters/Parameter.Header.RequestId"
        },
        {
          "$ref": "#/parameters/Parameter.Get.ContentId.Optional"
        },
        {
          "$ref": "#/parameters/Parameter.Get.License"
        },
        {
          "name": "state",
          "in": "query",
          "description": "",
          "required": false,
          "type": "string",
          "enum": [
            "cancelled",
            "just_purchased",
            "not_purchased",
            "overage",
            "possible",
            "purchased"
          ]
        }
      ]
    },
    "/Libraries/Download/{download id}": {
      "get": {
        "tags": [
          "Libraries"
        ],
        "summary": "Download purchased file.",
        "produces": [
          "image/jpeg",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Download licensed asset. The response should be type=file, but is omitted here due a bug in our validation library: https://github.com/Maks3w/SwaggerAssertions/issues/45"
          },
          "302": {
            "description": "URL Redirection to file in S3"
          },
          "400": {
            "description": "file not available",
            "schema": {
              "$ref": "#/definitions/Response.Error"
            }
          },
          "404": {
            "description": "No route matched the request",
            "schema": {
              "$ref": "#/definitions/Response.Error"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/Parameter.Header.Authorization.Required"
        },
        {
          "$ref": "#/parameters/Parameter.Header.ApiKey"
        },
        {
          "$ref": "#/parameters/Parameter.Header.Product.Optional"
        },
        {
          "$ref": "#/parameters/Parameter.Header.ProductLocation"
        },
        {
          "name": "format",
          "in": "query",
          "description": "What part of a compound file do you want returned ",
          "required": false,
          "type": "string",
          "default": "template",
          "enum": [
            "",
            "mogrt",
            "png",
            "json",
            "template"
          ]
        },
        {
          "name": "download id",
          "in": "path",
          "description": "Download id of the asset you want to download ",
          "required": true,
          "type": "string"
        },
        {
          "$ref": "#/parameters/Parameter.Get.Size"
        }
      ]
    },
    "/Libraries/Download/{content_id}/{license_id}": {
      "get": {
        "tags": [
          "Libraries"
        ],
        "summary": "Download purchased file.",
        "produces": [
          "image/jpeg",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Download licensed asset. The response should be type=file, but is omitted here due a bug in our validation library: https://github.com/Maks3w/SwaggerAssertions/issues/45."
          },
          "302": {
            "description": "URL Redirection to file in S3"
          },
          "400": {
            "description": "file not available",
            "schema": {
              "$ref": "#/definitions/Response.Error"
            }
          },
          "404": {
            "description": "No route matched the request",
            "schema": {
              "$ref": "#/definitions/Response.Error"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/Parameter.Header.Authorization.Required"
        },
        {
          "$ref": "#/parameters/Parameter.Header.ApiKey"
        },
        {
          "$ref": "#/parameters/Parameter.Header.Product.Optional"
        },
        {
          "$ref": "#/parameters/Parameter.Header.ProductLocation"
        },
        {
          "name": "format",
          "in": "query",
          "description": "What part of a compound file do you want returned ",
          "required": false,
          "type": "string",
          "default": "template",
          "enum": [
            "",
            "mogrt",
            "png",
            "json",
            "template"
          ]
        },
        {
          "name": "content_id",
          "in": "path",
          "description": "Content ID of the asset you want to download ",
          "required": true,
          "type": "integer"
        },
        {
          "name": "license_id",
          "in": "path",
          "description": "License ID that you want to download ",
          "required": true,
          "type": "integer",
          "enum": [
            "1",
            "2",
            "3",
            "4",
            "5",
            "6"
          ]
        },
        {
          "$ref": "#/parameters/Parameter.Get.Size"
        }
      ]
    },
    "/Libraries/Watermarked/Download/{content_id}/{license_id}": {
      "get": {
        "tags": [
          "Libraries"
        ],
        "summary": "Download watermarked file.",
        "produces": [
          "image/jpeg",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Download watermarked asset. The response should be type=file, but is omitted here due a bug in our validation library: https://github.com/Maks3w/SwaggerAssertions/issues/45."
          },
          "302": {
            "description": "URL Redirection to file in S3"
          },
          "400": {
            "description": "This is embarrassing, but this file cannot be downloaded.",
            "schema": {
              "$ref": "#/definitions/Response.Error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Response.Error"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/Parameter.Header.Authorization.Required"
        },
        {
          "$ref": "#/parameters/Parameter.Header.ApiKey"
        },
        {
          "$ref": "#/parameters/Parameter.Header.Product.Optional"
        },
        {
          "$ref": "#/parameters/Parameter.Header.ProductLocation"
        },
        {
          "name": "content_id",
          "in": "path",
          "description": "Content ID of the asset that you want to download ",
          "required": true,
          "type": "integer"
        },
        {
          "name": "license_id",
          "in": "path",
          "description": "License ID that you want to download",
          "required": true,
          "type": "integer",
          "enum": [
            "1",
            "2",
            "3",
            "4",
            "5",
            "6"
          ]
        }
      ]
    },
    "/Libraries/Watermarked/Download/{content_id}": {
      "get": {
        "tags": [
          "Libraries"
        ],
        "summary": "Download watermarked file.",
        "produces": [
          "image/jpeg",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Download watermarked asset. The response should be type=file, but is omitted here due a bug in our validation library: https://github.com/Maks3w/SwaggerAssertions/issues/45."
          },
          "302": {
            "description": "URL Redirection to file in S3"
          },
          "400": {
            "description": "This is embarrassing, but this file cannot be downloaded.",
            "schema": {
              "$ref": "#/definitions/Response.Error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Response.Error"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/Parameter.Header.Authorization.Optional"
        },
        {
          "$ref": "#/parameters/Parameter.Header.ApiKey"
        },
        {
          "$ref": "#/parameters/Parameter.Header.Product.Optional"
        },
        {
          "$ref": "#/parameters/Parameter.Header.ProductLocation"
        },
        {
          "name": "content_id",
          "in": "path",
          "description": "Content ID of the asset that you want to download",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/Media/1/Search/Files": {
      "get": {
        "tags": [
          "Media"
        ],
        "summary": "File search",
        "description": "Search for media files offered for selling. See details <a href='https://wiki.corp.adobe.com/display/adobestock/Stock+Search+API#StockSearchAPI-Method:Rest/Media/1/Search/Files'>here</a>.",
        "responses": {
          "200": {
            "description": "An array of search items",
            "schema": {
              "$ref": "#/definitions/Response.Files"
            }
          },
          "400": {
            "description": "Invalid input parameters",
            "schema": {
              "$ref": "#/definitions/Response.Error"
            }
          },
          "403": {
            "description": "Safe search is on",
            "schema": {
              "$ref": "#/definitions/Response.Error"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Response.Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Media"
        ],
        "summary": "File search",
        "description": "Search for media files offered for selling. See details <a href='https://wiki.corp.adobe.com/display/adobestock/Stock+Search+API#StockSearchAPI-Method:Rest/Media/1/Search/Files'>here</a>.",
        "consumes": [
          "application/json",
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "similar_image",
            "in": "formData",
            "description": "image data to use for visual similarity search. Use multipart/form-data. Ignored if search_parameters[similar_url] is specified.",
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of search items",
            "schema": {
              "$ref": "#/definitions/Response.Files"
            }
          },
          "400": {
            "description": "Invalid input parameters",
            "schema": {
              "$ref": "#/definitions/Response.Error"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Response.Error"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/Parameter.Header.ApiKey"
        },
        {
          "$ref": "#/parameters/Parameter.Header.Authorization.Optional"
        },
        {
          "$ref": "#/parameters/Parameter.Header.Product"
        },
        {
          "$ref": "#/parameters/Parameter.Header.ProductLocation"
        },
        {
          "$ref": "#/parameters/Parameter.Header.RequestId"
        },
        {
          "$ref": "#/parameters/Parameter.Get.Locale"
        },
        {
          "name": "search_parameters[words]",
          "in": "query",
          "description": "Keyword search (words can also be media_id, e.g. #20 #21 #22)",
          "type": "string"
        },
        {
          "name": "search_parameters[limit]",
          "in": "query",
          "description": "Maximum number of media returned",
          "type": "string",
          "default": "32"
        },
        {
          "name": "search_parameters[offset]",
          "in": "query",
          "description": "Start position in query",
          "type": "string",
          "default": "0"
        },
        {
          "name": "search_parameters[order]",
          "in": "query",
          "description": "Sort order",
          "type": "string",
          "default": "relevance",
          "enum": [
            "relevance",
            "price_1",
            "creation",
            "popularity",
            "nb_views",
            "nb_downloads",
            "undiscovered",
            "featured"
          ]
        },
        {
          "name": "search_parameters[creator_id]",
          "in": "query",
          "description": "Search by creator",
          "type": "integer"
        },
        {
          "name": "search_parameters[media_id]",
          "in": "query",
          "description": "Search by media id",
          "type": "integer"
        },
        {
          "name": "search_parameters[model_id]",
          "in": "query",
          "description": "Search by same model",
          "type": "integer"
        },
        {
          "name": "search_parameters[serie_id]",
          "in": "query",
          "description": "Search by same series",
          "type": "integer"
        },
        {
          "name": "search_parameters[similar]",
          "in": "query",
          "description": "Search by similar media (similar_content_id)",
          "type": "integer"
        },
        {
          "name": "search_parameters[category]",
          "in": "query",
          "description": "Search by category (e.g. 614)",
          "type": "integer"
        },
        {
          "name": "search_parameters[filters][has_releases]",
          "in": "query",
          "description": "People filter",
          "type": "string",
          "default": "all",
          "enum": [
            "true",
            "false",
            "all"
          ]
        },
        {
          "name": "search_parameters[filters][free]",
          "in": "query",
          "description": "Search by if asset is free",
          "type": "string",
          "default": "all",
          "enum": [
            "true",
            "false",
            "all"
          ]
        },
        {
          "name": "search_parameters[filters][content_type:photo]",
          "in": "query",
          "description": "Search for photos",
          "type": "integer",
          "default": 0,
          "enum": [
            0,
            1
          ]
        },
        {
          "name": "search_parameters[filters][content_type:illustration]",
          "in": "query",
          "description": "Search for illustrations",
          "type": "integer",
          "default": 0,
          "enum": [
            0,
            1
          ]
        },
        {
          "name": "search_parameters[filters][content_type:vector]",
          "in": "query",
          "description": "Search for vectors",
          "type": "integer",
          "default": 0,
          "enum": [
            0,
            1
          ]
        },
        {
          "name": "search_parameters[filters][content_type:video]",
          "in": "query",
          "description": "Search for videos",
          "type": "integer",
          "default": 0,
          "enum": [
            0,
            1
          ]
        },
        {
          "name": "search_parameters[filters][content_type:template]",
          "in": "query",
          "description": "Search for templates",
          "type": "integer",
          "default": 0,
          "enum": [
            0,
            1
          ]
        },
        {
          "name": "search_parameters[filters][offensive:2]",
          "in": "query",
          "description": "Explicit/Charm/Nudity/Violence included",
          "type": "integer",
          "default": 0,
          "enum": [
            0,
            1
          ]
        },
        {
          "name": "search_parameters[filters][isolated:on]",
          "in": "query",
          "description": "Isolated contents",
          "type": "integer",
          "default": 0,
          "enum": [
            0,
            1
          ]
        },
        {
          "name": "search_parameters[filters][panoramic:on]",
          "in": "query",
          "description": "Panoramic images (can be combined with orientation)",
          "type": "integer",
          "default": 0,
          "enum": [
            0,
            1
          ]
        },
        {
          "name": "search_parameters[filters][orientation]",
          "in": "query",
          "description": "Image orientation",
          "type": "string",
          "default": "all",
          "enum": [
            "horizontal",
            "vertical",
            "square",
            "panoramic",
            "all"
          ]
        },
        {
          "name": "search_parameters[filters][age]",
          "in": "query",
          "description": "Image age (weeks, months, years)",
          "type": "string",
          "default": "all",
          "enum": [
            "1w",
            "1m",
            "6m",
            "1y",
            "2y",
            "all"
          ]
        },
        {
          "name": "search_parameters[filters][video_duration]",
          "in": "query",
          "description": "Max video duration (sec)",
          "type": "string",
          "default": "all",
          "enum": [
            "10",
            "20",
            "30",
            "all"
          ]
        },
        {
          "name": "search_parameters[filters][copy_space]",
          "in": "query",
          "description": "Image copy space. Value 'all' returns all the images (equivalent to not having the filter in the query); Value 1 filters for images that have copy space ",
          "type": "string",
          "enum": [
            "1",
            "all"
          ]
        },
        {
          "name": "search_parameters[filters][colors]",
          "in": "query",
          "description": "Comma separated listed of hexadecimal colors (without any # prefix)",
          "type": "string"
        },
        {
          "name": "search_parameters[thumbnail_size]",
          "in": "query",
          "description": "Thumbnail size (px)",
          "type": "integer",
          "default": 400,
          "enum": [
            110,
            160,
            400
          ]
        },
        {
          "name": "search_parameters[filters][mogrt_source]",
          "in": "query",
          "description": "Comma separated listed of mogrt sources (aegraphic or prgraphic or both)",
          "type": "string"
        },
        {
          "name": "search_parameters[filters][mogrt_api_version]",
          "in": "query",
          "description": "mogrt api version such as 1.3, 1.4, 1.5. (Negative number is invalid)",
          "type": "string"
        },
        {
          "name": "search_parameters[filters][area_m_pixels]",
          "in": "query",
          "description": "Range in mega pixels such as 0-1, 10-50",
          "type": "string"
        },
        {
          "name": "search_parameters[filters][mobile_compatibility_version]",
          "in": "query",
          "description": "mobile compatibility version of mogrt. (An example 201710)",
          "type": "string"
        },
        {
          "name": "search_parameters[filters][image_width]",
          "in": "query",
          "description": "Width of an image in pixels. Min and max are optional and default to open ranges. An example of a range is 250-450",
          "type": "string"
        },
        {
          "name": "search_parameters[filters][image_height]",
          "in": "query",
          "description": "Height of an image in pixels. Min and max are optional and default to open ranges. An example of a range is 250-450",
          "type": "string"
        },
        {
          "name": "search_parameters[filters][dual_attribution_hash]",
          "in": "query",
          "description": "md5 hashed value of a dual attribution. (32 characters long and only consists of lowercase characters)",
          "type": "string"
        },
        {
          "name": "search_parameters[filters][audio_mood][]",
          "in": "query",
          "description": "Audio asset mood",
          "type": "array",
          "items": {
            "type": "string"
          },
          "collectionFormat": "multi",
          "enum": [
            "Angry",
            "Atmospheric",
            "Dramatic",
            "Dreamy",
            "Dynamic",
            "Emotional",
            "Epic",
            "Exotic",
            "Festive",
            "Frantic",
            "Gritty",
            "Groovy",
            "Happy",
            "Inspiring",
            "Mellow",
            "Mysterious",
            "Neutral",
            "Nostalgic",
            "Playful",
            "Powerful",
            "Quirky",
            "Relaxing",
            "Romantic",
            "Sad",
            "Scary",
            "Space Age",
            "Sexy",
            "Slow",
            "Sparse",
            "Suspenseful"
          ]
        },
        {
          "name": "search_parameters[filters][audio_genre][]",
          "in": "query",
          "description": "Audio asset genre",
          "type": "array",
          "items": {
            "type": "string"
          },
          "collectionFormat": "multi",
          "enum": [
            "Acoustic",
            "Background",
            "Blues",
            "Brass",
            "Classical",
            "Country",
            "Dance",
            "Electronic",
            "Film",
            "Hip-Hop",
            "Jazz",
            "Latin",
            "Novelty",
            "Occasion",
            "Pop",
            "Reggae",
            "Religious",
            "R&B",
            "Rock",
            "World"
          ]
        },
        {
          "name": "search_parameters[filters][audio_sub_genre][]",
          "in": "query",
          "description": "Audio asset sub genre",
          "type": "array",
          "items": {
            "type": "string"
          },
          "collectionFormat": "multi",
          "enum": [
            "Acid",
            "African",
            "Alternative Country",
            "Alternative Rock",
            "Ambient",
            "Asian",
            "Australian",
            "Balkan",
            "Baroque",
            "Bebop",
            "Big Band",
            "Birthday",
            "Bollywood",
            "Breakbeat",
            "Britpop",
            "Bubblegum",
            "Cajun",
            "Calypso",
            "Cartoon",
            "Celtic",
            "Cha Cha",
            "Chamber Music",
            "Children",
            "Chinese",
            "Christian",
            "Circus",
            "Classic",
            "Classical Period",
            "Comedy",
            "Contemporary",
            "Crunk",
            "Cuban",
            "Dancehall",
            "Disco",
            "Doo Wop",
            "Drones",
            "Dubstep",
            "Electropop",
            "European",
            "Europop",
            "Film",
            "Flamenco",
            "Folk",
            "French",
            "Funeral",
            "Funk",
            "Fusion",
            "Gangsta",
            "German",
            "Gospel",
            "Grunge",
            "Hawaiian",
            "Holiday",
            "House",
            "Indian",
            "Indie",
            "Industrial",
            "Irish",
            "Island",
            "Italian",
            "Japanese",
            "Klezmer",
            "Korean",
            "Mambo",
            "Marching Band",
            "Medieval",
            "Merengue",
            "Metal",
            "Mexican",
            "Middle Eastern",
            "Modern Blues",
            "Modern Classical",
            "Modern Country",
            "Modern Jazz",
            "Motown",
            "Muzak",
            "Native American",
            "New Age",
            "Norwegian",
            "Old School",
            "Opera",
            "Orchestral",
            "Original",
            "Pop Punk",
            "Portuguese",
            "Punk",
            "Ragtime",
            "Rap",
            "Rave",
            "Renaissance",
            "Romantic",
            "Roots",
            "Rumba",
            "Russian",
            "Salsa",
            "Samba",
            "Scandinavian",
            "Ska",
            "Smooth",
            "Soft",
            "Solo",
            "Soul",
            "Southern",
            "Spanish",
            "Surf",
            "Swing",
            "Synth Pop",
            "Tango",
            "Techno",
            "Tejano",
            "Traditional Blues",
            "Traditional Country",
            "Traditional Dance",
            "Traditional Jazz",
            "Trance",
            "Trap",
            "Wedding"
          ]
        },
        {
          "name": "search_parameters[filters][audio_tempo]",
          "in": "query",
          "description": "Audio asset tempo range from 1-300",
          "type": "string"
        },
        {
          "name": "search_parameters[filters][audio_royalties]",
          "in": "query",
          "description": "Does the audio asset require royalties",
          "type": "string",
          "enum": [
            "0",
            "1",
            "all"
          ]
        },
        {
          "name": "search_parameters[filters][audio_albums]",
          "in": "query",
          "description": "Exact name of an album",
          "type": "string"
        },
        {
          "name": "search_parameters[filters][audio_instrumental]",
          "in": "query",
          "description": "To include assets that are only instrumentals",
          "type": "string",
          "enum": [
            "0",
            "1",
            "all"
          ]
        },
        {
          "name": "result_columns[]",
          "in": "query",
          "description": "Fields you want to have included in the search result ('is_licensed' requires authentication)",
          "type": "array",
          "items": {
            "type": "string"
          },
          "collectionFormat": "multi",
          "default": [
            "nb_results",
            "id",
            "title",
            "width",
            "height",
            "creator_name",
            "creator_id",
            "thumbnail_url",
            "thumbnail_html_tag",
            "thumbnail_width",
            "thumbnail_height",
            "media_type_id",
            "vector_type",
            "content_type",
            "category",
            "stock_id",
            "premium_level_id"
          ],
          "enum": [
            "nb_results",
            "id",
            "title",
            "creator_name",
            "creator_id",
            "country_name",
            "width",
            "height",
            "media_type_id",
            "vector_type",
            "nb_views",
            "nb_downloads",
            "creation_date",
            "keywords",
            "has_releases",
            "category",
            "category_hierarchy",
            "is_licensed",
            "content_type",
            "stock_id",
            "thumbnail_url",
            "thumbnail_html_tag",
            "thumbnail_width",
            "thumbnail_height",
            "mogrt_metadata_url",
            "comp_url",
            "comp_width",
            "comp_height",
            "framerate",
            "duration - seconds for videos and templates",
            "comps",
            "details_url",
            "premium_level_id",
            "is_illustrative",
            "3d_type_id",
            "video_preview_url",
            "video_preview_height",
            "video_preview_width",
            "video_preview_content_length",
            "video_preview_content_type",
            "video_small_preview_url",
            "video_small_preview_height",
            "video_small_preview_width",
            "video_small_preview_content_length",
            "video_small_preview_content_type",
            "is_tileable",
            "is_procedural",
            "artist_name",
            "member_display_name",
            "dual_attribution_hash",
            "album",
            "release_date",
            "tempo",
            "moods",
            "genres",
            "subgenres",
            "track_type",
            "is_instrumental",
            "requires_performance_royalties",
            "audio_channels",
            "audio_bitrate",
            "audio_codec",
            "audio_samplerate",
            "audio_samplerate_preview",
            "waveform_json_500",
            "waveform_json_1000",
            "waveform_json_1500"
          ]
        }
      ]
    },
    "/Media/1/Files/": {
      "get": {
        "tags": [
          "Media"
        ],
        "summary": "Bulk file data retrieval",
        "description": "Retrieve media files in bulk. See <a href='https://wiki.corp.adobe.com/display/adobestock/Files+API'>the design document</a> for more details.",
        "parameters": [
          {
            "$ref": "#/parameters/Parameter.Header.ApiKey"
          },
          {
            "$ref": "#/parameters/Parameter.Header.Authorization.Optional"
          },
          {
            "$ref": "#/parameters/Parameter.Header.Product"
          },
          {
            "$ref": "#/parameters/Parameter.Header.ProductLocation"
          },
          {
            "$ref": "#/parameters/Parameter.Header.RequestId"
          },
          {
            "$ref": "#/parameters/Parameter.Get.Locale"
          },
          {
            "name": "ids",
            "in": "query",
            "description": "Comma-separated list of file IDs, e.g. 'ids=100,101'",
            "required": true,
            "type": "string"
          },
          {
            "name": "result_columns[]",
            "in": "query",
            "description": "Fields you want to have included in the search result ('is_licensed' requires authentication)",
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "default": [
              "id"
            ],
            "enum": [
              "nb_results",
              "id",
              "title",
              "creator_name",
              "creator_id",
              "country_name",
              "width",
              "height",
              "media_type_id",
              "vector_type",
              "nb_views",
              "nb_downloads",
              "creation_date",
              "has_releases",
              "category",
              "category_hierarchy",
              "is_licensed",
              "is_illustrative",
              "content_type",
              "stock_id",
              "thumbnail_url",
              "thumbnail_html_tag",
              "thumbnail_width",
              "thumbnail_height",
              "is_tileable",
              "is_procedural",
              "comp_url",
              "comp_width",
              "comp_height",
              "framerate",
              "duration",
              "comps",
              "details_url",
              "premium_level_id",
              "3d_type_id",
              "is_editorial",
              "licenses",
              "album",
              "keywords",
              "is_premium",
              "audio_codec",
              "audio_channels",
              "tempo",
              "audio_bitrate",
              "is_instrumental",
              "requires_performance_royalties",
              "release_date",
              "waveform_json_500",
              "waveform_json_1000",
              "waveform_json_1500",
              "audio_samplerate",
              "audio_samplerate_preview"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "An array of file data",
            "schema": {
              "$ref": "#/definitions/Response.Files"
            }
          },
          "400": {
            "description": "Invalid input parameters",
            "schema": {
              "$ref": "#/definitions/Response.Error"
            }
          },
          "404": {
            "description": "Unknown id supplied in 'ids' parameter",
            "schema": {
              "$ref": "#/definitions/Response.Error"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Response.Error"
            }
          }
        }
      }
    },
    "/Media/1/Files/Previews": {
      "get": {
        "tags": [
          "Media"
        ],
        "summary": "Endpoint for generating bulk 1000px unwatermarked previews",
        "description": "Retrieve media files in bulk. See <a href='https://wiki.corp.adobe.com/display/adobestock/Partner+bulk+API+for+1000+pixel+unwatermarked+images'>the design document</a> for more details.",
        "responses": {
          "200": {
            "description": "An array of 1000px previews",
            "schema": {
              "$ref": "#/definitions/Response.FilesPreviews"
            }
          },
          "400": {
            "description": "Invalid input parameter",
            "schema": {
              "$ref": "#/definitions/Response.Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Response.Error"
            }
          },
          "404": {
            "description": "Route does not exist",
            "schema": {
              "$ref": "#/definitions/Response.Error"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Response.Error"
            }
          }
        }
      }
    },
    "/Media/1/Partners/Audio": {
      "get": {
        "tags": [
          "Media"
        ],
        "summary": "Audio partner list api",
        "description": "List all audio partners that a user should be able to filter on in DVA apps. See details <a href='https://wiki.corp.adobe.com/display/adobestock/Partners+API'>here</a>.",
        "parameters": [
          {
            "$ref": "#/parameters/Parameter.Header.ApiKey"
          },
          {
            "$ref": "#/parameters/Parameter.Header.Product"
          },
          {
            "$ref": "#/parameters/Parameter.Header.ProductLocation"
          },
          {
            "$ref": "#/parameters/Parameter.Header.RequestId"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of partners",
            "examples": {
              "application/json": [
                {
                  "id": 12345,
                  "name": "Epidemic Sound"
                },
                {
                  "id": 22222,
                  "name": "Artlist"
                }
              ]
            }
          }
        }
      }
    },
    "/Media/1/Partners/LicenseValidation": {
      "get": {
        "tags": [
          "Media"
        ],
        "summary": "Partner license code validation api",
        "description": "Check a provided license code to see if it is actually valid and return the details relating to that license code",
        "parameters": [
          {
            "$ref": "#/parameters/Parameter.Header.Authorization.Required"
          },
          {
            "$ref": "#/parameters/Parameter.Header.ApiKey"
          },
          {
            "$ref": "#/parameters/Parameter.Header.RequestId"
          },
          {
            "name": "code",
            "in": "query",
            "description": "License code for validation. example: 'ASLC-186AB-7485B756C9'",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An object enclosing license code validation details",
            "schema": {
              "$ref": "#/definitions/Response.LicenseCodeValidation"
            }
          },
          "400": {
            "description": "Missing/Invalid input parameter \\'code\\'",
            "schema": {
              "$ref": "#/definitions/Response.Error"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Response.Error"
            }
          }
        }
      }
    },
    "/Media/1/Search/CategoryTree": {
      "get": {
        "tags": [
          "Media"
        ],
        "summary": "Sub-categories details.",
        "description": "Retrieve a list of 1th level sub-categories for the provided parent category. See details <a href='https://wiki.corp.adobe.com/display/adobestock/Category+Tree+API'>here</a>.",
        "parameters": [
          {
            "$ref": "#/parameters/Parameter.Header.ApiKey"
          },
          {
            "$ref": "#/parameters/Parameter.Header.Authorization.Optional"
          },
          {
            "$ref": "#/parameters/Parameter.Header.Product"
          },
          {
            "$ref": "#/parameters/Parameter.Header.ProductLocation"
          },
          {
            "$ref": "#/parameters/Parameter.Header.RequestId"
          },
          {
            "$ref": "#/parameters/Parameter.Get.Locale"
          },
          {
            "$ref": "#/parameters/Parameter.Get.CategoryId"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of sub-categories",
            "schema": {
              "$ref": "#/definitions/Response.Categories"
            },
            "examples": {
              "application/json": [
                {
                  "id": 615,
                  "link": "/Category/fall/615",
                  "name": "Fall"
                },
                {
                  "id": 616,
                  "link": "/Category/spring/616",
                  "name": "Spring"
                },
                {
                  "id": 617,
                  "link": "/Category/summer/617",
                  "name": "Summer"
                },
                {
                  "id": 618,
                  "link": "/Category/winter/618",
                  "name": "Winter"
                }
              ]
            }
          },
          "400": {
            "description": "Invalid input parameters",
            "schema": {
              "$ref": "#/definitions/Response.Error"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Response.Error"
            }
          }
        }
      }
    },
    "/Media/1/Search/Category": {
      "get": {
        "tags": [
          "Media"
        ],
        "summary": "Category details.",
        "description": "Retrieve category details by the provided id. See details <a href='https://wiki.corp.adobe.com/display/adobestock/Category+API'>here</a>.",
        "parameters": [
          {
            "$ref": "#/parameters/Parameter.Header.ApiKey"
          },
          {
            "$ref": "#/parameters/Parameter.Header.Authorization.Optional"
          },
          {
            "$ref": "#/parameters/Parameter.Header.Product"
          },
          {
            "$ref": "#/parameters/Parameter.Header.ProductLocation"
          },
          {
            "$ref": "#/parameters/Parameter.Header.RequestId"
          },
          {
            "$ref": "#/parameters/Parameter.Get.Locale"
          },
          {
            "$ref": "#/parameters/Parameter.Get.CategoryId"
          }
        ],
        "responses": {
          "200": {
            "description": "Category details",
            "schema": {
              "$ref": "#/definitions/Response.Category"
            },
            "examples": {
              "application/json": {
                "id": 615,
                "link": "/Category/fall/615",
                "name": "Fall"
              }
            }
          },
          "400": {
            "description": "Invalid input parameters",
            "schema": {
              "$ref": "#/definitions/Response.Error"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Response.Error"
            }
          }
        }
      }
    },
    "/Media/1/Search/Templates": {
      "get": {
        "tags": [
          "Media"
        ],
        "summary": "Retrieve templates from Adobe Stock.",
        "description": "Retrieve templates. See <a href='https://wiki.corp.adobe.com/display/adobestock/Template+Search+API'>the design document</a> for more details.",
        "parameters": [
          {
            "$ref": "#/parameters/Parameter.Header.ApiKey"
          },
          {
            "$ref": "#/parameters/Parameter.Header.Product"
          },
          {
            "$ref": "#/parameters/Parameter.Header.ProductLocation"
          },
          {
            "$ref": "#/parameters/Parameter.Header.RequestId"
          },
          {
            "$ref": "#/parameters/Parameter.Get.Locale"
          },
          {
            "name": "product",
            "in": "query",
            "description": "Templates will be returned based on product identifier and version. Example: PHXS/15.2.0",
            "required": true,
            "type": "string"
          },
          {
            "name": "country_code",
            "in": "query",
            "description": "Country code. Determines pricing",
            "type": "string",
            "default": "US"
          },
          {
            "name": "search_parameters[limit]",
            "in": "query",
            "description": "determines pagination limit",
            "type": "integer",
            "default": "100"
          },
          {
            "name": "search_parameters[offset]",
            "in": "query",
            "description": "determines pagination offset",
            "type": "integer",
            "default": "0"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of file data",
            "schema": {
              "required": [
                "templates"
              ],
              "properties": {
                "nb_results": {
                  "description": "Total number of templates found",
                  "type": "integer"
                },
                "ExpirationDTS": {
                  "description": "expiration of content",
                  "type": "integer"
                },
                "templates": {
                  "description": "Templates",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Template"
                  }
                }
              },
              "type": "object"
            }
          },
          "400": {
            "description": "Missing required parameter",
            "schema": {
              "$ref": "#/definitions/Response.Error"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Response.Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Response.Date": {
      "required": [
        "formatted",
        "timestamp"
      ],
      "properties": {
        "formatted": {
          "type": "string"
        },
        "timestamp": {
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Response.Error": {
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "case": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Response.Files": {
      "required": [
        "files"
      ],
      "properties": {
        "nb_results": {
          "description": "Total number of media files found",
          "type": "integer"
        },
        "files": {
          "description": "Media files",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Response.File"
          }
        }
      },
      "type": "object"
    },
    "Response.File": {
      "properties": {
        "id": {
          "description": "Item id",
          "type": "integer"
        },
        "title": {
          "description": "Item title",
          "type": "string"
        },
        "width": {
          "description": "Item width",
          "type": "integer"
        },
        "height": {
          "description": "Item height",
          "type": "integer"
        },
        "creator_name": {
          "description": "Creator name",
          "type": "string"
        },
        "creator_id": {
          "description": "Creator unique id",
          "type": "integer"
        },
        "creation_date": {
          "description": "Creation date (e.g 2015-09-23 14:52:12.24501)",
          "type": "string"
        },
        "country_name": {
          "description": "Country name",
          "type": "string"
        },
        "media_type_id": {
          "description": "Type of media (1 - photo, 2 - illustration, 3 - vector, 4 - video, 7 - template)",
          "type": "integer",
          "enum": [
            1,
            2,
            3,
            4,
            7
          ]
        },
        "vector_type": {
          "description": "If the file is a vector indicates if its a svg or a ai/eps (reported as zip)",
          "type": [
            "string",
            "null"
          ]
        },
        "content_type": {
          "description": "Content type of the file (e.g. image/jpeg)",
          "type": "string"
        },
        "category_hierarchy": {
          "description": "Search item categories list",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Response.Category"
          }
        },
        "nb_views": {
          "description": "Number of views",
          "type": "integer"
        },
        "nb_downloads": {
          "description": "Number of downloads",
          "type": "integer"
        },
        "keywords": {
          "description": "Item keywords",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Response.Keyword"
          }
        },
        "has_releases": {
          "description": "People boolean flag",
          "type": "integer",
          "enum": [
            1,
            0
          ]
        },
        "stock_id": {
          "description": "Stock identifier",
          "type": "string"
        },
        "is_licensed": {
          "description": "License type",
          "type": "string"
        },
        "thumbnail_url": {
          "description": "Thumbnail URL",
          "type": "string"
        },
        "thumbnail_html_tag": {
          "description": "Thumbnail HTML img tag",
          "type": "string"
        },
        "thumbnail_width": {
          "description": "Thumbnail width",
          "type": "integer"
        },
        "thumbnail_height": {
          "description": "Thumbnail height",
          "type": "integer"
        },
        "comp_url": {
          "description": "Comp URL",
          "type": "string"
        },
        "comp_width": {
          "description": "Comp width",
          "type": "integer"
        },
        "comp_height": {
          "description": "Comp height",
          "type": "integer"
        },
        "duration": {
          "description": "Video duration. If null then this response column was requested for an asset that is not a video.",
          "type": [
            "integer",
            "null"
          ]
        },
        "framerate": {
          "description": "Video framerate. If null then this response column was requested for an asset that is not a video.",
          "type": [
            "string",
            "null"
          ]
        },
        "comps": {
          "$ref": "#/definitions/Response.Comps"
        },
        "details_url": {
          "description": "URL to AdobeStock with content details",
          "type": "string"
        },
        "video_preview_url": {
          "description": "URL to the regular video preview",
          "type": "string"
        },
        "video_preview_width": {
          "description": "Width of the regular video preview in pixels",
          "type": "integer"
        },
        "video_preview_height": {
          "description": "Height of the regular video preview in pixels",
          "type": "integer"
        },
        "video_preview_content_length": {
          "description": "File size of the regular preview in bytes",
          "type": "integer"
        },
        "video_preview_content_type": {
          "description": "Content type (i.e. MIME type) of the regular preview",
          "type": "string"
        },
        "video_small_preview_url": {
          "description": "URL to the small video preview",
          "type": "string"
        },
        "video_small_preview_width": {
          "description": "Width of the small video preview in pixels",
          "type": "integer"
        },
        "video_small_preview_height": {
          "description": "Height of the small video preview in pixels",
          "type": "integer"
        },
        "video_small_preview_content_length": {
          "description": "File size of the small preview in bytes",
          "type": "integer"
        },
        "video_small_preview_content_type": {
          "description": "Content type (i.e. MIME type) of the small preview",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Response.Comps": {
      "description": "List of asset comps",
      "properties": {
        "Standard": {
          "$ref": "#/definitions/Response.Comp"
        },
        "Video_HD": {
          "$ref": "#/definitions/Response.Comp"
        },
        "Video_4K": {
          "$ref": "#/definitions/Response.Comp"
        }
      },
      "type": "object"
    },
    "Response.Comp": {
      "description": "Watermarked comp info",
      "required": [
        "url",
        "width",
        "height"
      ],
      "properties": {
        "url": {
          "description": "URL to download watermarked comp file",
          "type": "string"
        },
        "content_type": {
          "description": "Comp MIME type (e.g. application/illustrator)",
          "type": "string"
        },
        "width": {
          "description": "Comp width",
          "type": "integer"
        },
        "height": {
          "description": "Comp height",
          "type": "integer"
        },
        "framerate": {
          "description": "Video framerate",
          "type": "string"
        },
        "duration": {
          "description": "Video duration",
          "type": "integer"
        },
        "content_length": {
          "description": "Video content length",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Response.Keyword": {
      "description": "Search item keyword",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "description": "Keyword",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Response.Categories": {
      "description": "A list of 1th level child categories",
      "type": "array",
      "items": {
        "$ref": "#/definitions/Response.Category"
      }
    },
    "Response.Category": {
      "description": "Category details",
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "id": {
          "description": "Category id",
          "type": "integer"
        },
        "link": {
          "description": "Relative URL pointing to category page at AdobeStock",
          "type": "string"
        },
        "name": {
          "description": "Category name",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Response.Profiles": {
      "description": "A list of member profiles",
      "type": "array",
      "items": {
        "$ref": "#/definitions/Response.Profile"
      }
    },
    "Response.Profile": {
      "description": "Member profile details",
      "required": [
        "guid",
        "creation_date"
      ],
      "properties": {
        "guid": {
          "description": "Member GUID (e.g. EBB978DB554BC9237F000101@AdobeID)",
          "type": [
            "string",
            "null"
          ]
        },
        "creation_date": {
          "description": "Member registration date (e.g. 2015-05-07 15:20:55)",
          "type": "string"
        },
        "entitlements": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Response.Entitlement"
          }
        }
      },
      "type": "object"
    },
    "Response.ProfileExtended": {
      "description": "Member profile details",
      "required": [
        "guid",
        "creation_date"
      ],
      "properties": {
        "guid": {
          "description": "Member GUID (e.g. EBB978DB554BC9237F000101@AdobeID)",
          "type": [
            "string",
            "null"
          ],
          "example": "EBB978DB554BC9237F000101@AdobeID"
        },
        "creation_date": {
          "description": "Member registration date (e.g. 2015-05-07 15:20:55)",
          "type": "string",
          "example": "2015-05-07 15:20:55"
        },
        "organizations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Response.Organization"
          }
        }
      },
      "type": "object"
    },
    "Response.Organization": {
      "description": "Organization details",
      "required": [
        "id",
        "name",
        "entitlements"
      ],
      "properties": {
        "id": {
          "description": "Organization id",
          "type": [
            "integer",
            "null"
          ],
          "example": "123456"
        },
        "name": {
          "description": "Organization name",
          "type": "string",
          "example": "Adobe Stock"
        },
        "entitlements": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Response.EntitlementExtended"
          }
        }
      },
      "type": "object"
    },
    "Response.Entitlement": {
      "description": "Entitlement details",
      "required": [
        "entitlement_id",
        "label",
        "creation",
        "nb_active_allotments",
        "licenses_available",
        "licenses_used",
        "has_overage"
      ],
      "properties": {
        "entitlement_id": {
          "description": "Entitlement id",
          "type": "integer"
        },
        "label": {
          "description": "Entitlement type label (e.g. Personal)",
          "type": "string"
        },
        "guid": {
          "description": "Entitlement GUID",
          "type": [
            "string",
            "null"
          ]
        },
        "creation": {
          "description": "Entitlement creation date (e.g. 2015-05-07 15:20:55)",
          "type": "string"
        },
        "nb_active_allotments": {
          "description": "Number of active allotments",
          "type": "integer"
        },
        "licenses_available": {
          "description": "Number of available licenses",
          "type": "integer"
        },
        "licenses_used": {
          "description": "Number of already used licences",
          "type": "integer"
        },
        "has_overage": {
          "description": "Flag whether overage is available for this entitlement",
          "type": "boolean"
        },
        "suspended_date": {
          "description": "Suspension date (e.g. 2015-05-07 15:20:55)",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "type": "object"
    },
    "Response.EntitlementExtended": {
      "description": "Entitlement details",
      "required": [
        "entitlement_id",
        "label",
        "creation",
        "nb_active_allotments",
        "licenses_available",
        "licenses_used",
        "has_overage",
        "is_default_entitlement",
        "suspended_date"
      ],
      "properties": {
        "entitlement_id": {
          "description": "Entitlement id",
          "type": "integer",
          "example": "123456"
        },
        "label": {
          "description": "Entitlement type label (e.g. Personal)",
          "type": "string",
          "example": "New Stock Project"
        },
        "guid": {
          "description": "Entitlement GUID",
          "type": [
            "string",
            "null"
          ],
          "example": "EBB978DB554BC9237F000101@AdobeOrg"
        },
        "creation": {
          "description": "Entitlement creation date (e.g. 2015-05-07 15:20:55)",
          "type": "string",
          "example": "2015-05-07 15:20:55"
        },
        "nb_active_allotments": {
          "description": "Number of active allotments",
          "type": "integer"
        },
        "licenses_available": {
          "description": "Number of available licenses",
          "type": "integer"
        },
        "licenses_used": {
          "description": "Number of already used licences",
          "type": "integer"
        },
        "has_overage": {
          "description": "Flag whether overage is available for this entitlement",
          "type": "boolean"
        },
        "is_default_entitlement": {
          "description": "True if this entitlement is the default one for given user",
          "type": "boolean"
        },
        "suspended_date": {
          "description": "Suspension date (e.g. 2015-05-07 15:20:55)",
          "type": [
            "string",
            "null"
          ],
          "example": "2015-05-07 15:20:55"
        }
      },
      "type": "object"
    },
    "Response.ShortEntitlement": {
      "description": "Entitlement details",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "description": "Entitlement id",
          "type": "integer"
        },
        "guid": {
          "description": "Entitlement GUID",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "type": "object"
    },
    "Response.Allotments": {
      "required": [
        "nb_pages",
        "allotments"
      ],
      "properties": {
        "nb_pages": {
          "description": "Total number of pages (50 allotments per page)",
          "type": "integer"
        },
        "allotments": {
          "description": "Allotments",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Response.Allotment"
          }
        }
      },
      "type": "object"
    },
    "Response.Allotment": {
      "description": "Allotment details",
      "required": [
        "allotment_id",
        "type",
        "product_key",
        "order_num",
        "sao",
        "creation_timestamp",
        "expiration_timestamp",
        "quota_used",
        "quota_available"
      ],
      "properties": {
        "allotment_id": {
          "description": "Id (e.g. 120079)",
          "type": "integer"
        },
        "type": {
          "description": "Type (e.g. Overage, On-Demand, Yearly)",
          "type": "string"
        },
        "product_key": {
          "description": "Product key (e.g. /Applications/CC/PSLRStockBundle)",
          "type": "string"
        },
        "order_num": {
          "description": "Order number",
          "type": "string"
        },
        "sao": {
          "description": "SAO id (e.g. 32432ECB555A4F970A74503A)",
          "type": "string"
        },
        "creation_timestamp": {
          "description": "Creation timestamp (e.g. 1438976019.44047)",
          "type": "string"
        },
        "expiration_timestamp": {
          "description": "Expiration timestamp (e.g. 1474570423.23173)",
          "type": "string"
        },
        "quota_used": {
          "description": "Number of licences used",
          "type": "integer"
        },
        "quota_available": {
          "description": "Number of licences available",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Response.Downloads": {
      "required": [
        "nb_pages",
        "downloads"
      ],
      "properties": {
        "nb_pages": {
          "description": "Total number of pages (50 downloads per page)",
          "type": "integer"
        },
        "downloads": {
          "description": "Download",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Response.Download"
          }
        }
      },
      "type": "object"
    },
    "Response.Download": {
      "description": "Download details",
      "required": [
        "file_id",
        "file_url",
        "downloaded_date",
        "license"
      ],
      "properties": {
        "file_id": {
          "description": "File id (e.g. 63878698)",
          "type": "integer"
        },
        "file_url": {
          "description": "Absolute URL to download the file",
          "type": "string"
        },
        "downloaded_date": {
          "description": "Download date (e.g. 2015-09-22 18:52:51)",
          "type": "string"
        },
        "license": {
          "$ref": "#/definitions/Response.License"
        }
      },
      "type": "object"
    },
    "Response.DownloadExtended": {
      "description": "Download details",
      "required": [
        "id32",
        "license_id",
        "member_id",
        "entitlement_id"
      ],
      "properties": {
        "id": {
          "description": "Download unique id",
          "type": "integer"
        },
        "id32": {
          "description": "Download unique hash",
          "type": "string"
        },
        "license_id": {
          "description": "Download license id",
          "type": "integer"
        },
        "license_type_id": {
          "description": "Download license type id",
          "type": "integer"
        },
        "member_id": {
          "description": "Download member id",
          "type": "integer"
        },
        "entitlement_id": {
          "description": "Download entitlement id",
          "type": "integer"
        },
        "content_id": {
          "description": "Download content id",
          "type": "integer"
        },
        "reference_id": {
          "description": "Download reference id",
          "type": "string"
        },
        "creation_date": {
          "$ref": "#/definitions/Response.Date"
        }
      },
      "type": "object"
    },
    "Response.License": {
      "description": "License type",
      "type": "string",
      "enum": [
        "Standard",
        "Extended",
        "Video_HD",
        "Video_4K"
      ]
    },
    "Response.Contents": {
      "properties": {
        "63878698": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Response.ContentItem"
          }
        }
      },
      "type": "object"
    },
    "Response.Member": {
      "description": "Member info",
      "required": [
        "stock_id"
      ],
      "properties": {
        "stock_id": {
          "description": "Member id or content.id32 plus member id if content has been downloaded (e.g. '6521' or 'h7JeafbSdXXVdnELwREfbg1zrgfqbxr8,6521')",
          "type": [
            "string",
            "integer"
          ]
        }
      },
      "type": "object"
    },
    "Response.ShortMember": {
      "description": "Member info",
      "required": [
        "id",
        "guid"
      ],
      "properties": {
        "id": {
          "description": "Member id",
          "type": "integer"
        },
        "guid": {
          "description": "Member GUID",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Response.AvailableEntitlement": {
      "description": "Entitlement info",
      "required": [
        "quota"
      ],
      "properties": {
        "quota": {
          "description": "Number of available licences",
          "type": "integer"
        },
        "license_type_id": {
          "description": "License type of combined asset and license",
          "type": [
            "integer",
            "null"
          ]
        },
        "has_credit_model": {
          "description": "Has entitlement gen 2 enterprise offer",
          "type": "boolean"
        },
        "has_agency_model": {
          "description": "Has entitlement gen 3 enterprise offer",
          "type": "boolean"
        },
        "is_cce": {
          "description": "Is entitlement enterprise",
          "type": "boolean"
        },
        "full_entitlement_quota": {
          "$ref": "#/definitions/Response.Full_Entitlement_Quota"
        },
        "credit_card_purchase_eligbility": {
          "$ref": "#/definitions/Response.Credit_Card_Purchase_Eligibility"
        }
      },
      "type": [
        "object",
        "null"
      ]
    },
    "Response.Credit_Card_Purchase_Eligibility": {
      "description": "User's credit card purchase eligbility for different plans",
      "properties": {
        "credit_card_purchase": {
          "description": "Is user eligible to credit card purchase",
          "type": "boolean"
        },
        "on_demand": {
          "description": "On-demand with individual conditions",
          "type": "boolean"
        },
        "credit_pack": {
          "description": "Credit packs with individual conditions",
          "type": "boolean"
        },
        "subscription_plans": {
          "description": "Subscription plans with individual conditions",
          "type": "boolean"
        },
        "on_demand_with_negotiated_price": {
          "description": "On-demand with negociated price (ETLA conditions)",
          "type": "boolean"
        },
        "standard_on_demand_with_negotiated_price": {
          "description": "On-demand with negociated price (ETLA conditions) for standard assets",
          "type": "boolean"
        },
        "premium_on_demand_with_negotiated_price": {
          "description": "On-demand with negociated price (ETLA conditions) for premium assets",
          "type": "boolean"
        }
      },
      "type": [
        "array",
        "object"
      ]
    },
    "Response.Full_Entitlement_Quota": {
      "description": "More detailed information about the entitlements quota",
      "properties": {
        "image_quota": {
          "description": "Available quota for core images",
          "type": "integer"
        },
        "video_quota": {
          "description": "Available quota for HD videos",
          "type": "integer"
        },
        "credits_quota": {
          "description": "Available quota for all non core assets. If the entitlement does not have image_quota then credits_quota can also be used for core assets",
          "type": "integer"
        },
        "standard_credits_quota": {
          "description": "Available agency quota for core images",
          "type": "integer"
        },
        "premium_credits_quota": {
          "description": "Available agency quota for all non core assets",
          "type": "integer"
        },
        "universal_credits_quota": {
          "description": "Available agency quota that can be used for any asset",
          "type": "integer"
        }
      },
      "type": [
        "array",
        "object"
      ]
    },
    "Response.ContentItem": {
      "description": "Content item",
      "required": [
        "content_id",
        "size",
        "purchase_details"
      ],
      "properties": {
        "content_id": {
          "description": "File id (e.g. 63878698)",
          "type": "integer",
          "default": "63878698"
        },
        "size": {
          "description": "Size type",
          "type": "string",
          "enum": [
            "Comp",
            "Original"
          ]
        },
        "purchase_details": {
          "$ref": "#/definitions/Response.Purchase"
        },
        "comp": {
          "$ref": "#/definitions/Response.Comp"
        },
        "thumbnail": {
          "$ref": "#/definitions/Response.Thumbnail"
        }
      },
      "type": "object"
    },
    "Response.Purchase": {
      "description": "Content purchase info",
      "required": [
        "state"
      ],
      "properties": {
        "state": {
          "description": "Purchase state",
          "type": "string",
          "enum": [
            "purchased",
            "not_purchased",
            "cancelled",
            "just_purchased",
            "not_possible"
          ]
        },
        "stock_id": {
          "description": "Member id",
          "type": "integer"
        },
        "license": {
          "$ref": "#/definitions/Response.License"
        },
        "date": {
          "description": "Purchase date (e.g. 2016-01-07 20:42:22)",
          "type": "string"
        },
        "url": {
          "description": "URL to download purchased file",
          "type": "string"
        },
        "content_type": {
          "description": "File MIME type (e.g. application/illustrator)",
          "type": "string"
        },
        "width": {
          "description": "File width",
          "type": "integer"
        },
        "height": {
          "description": "File height",
          "type": "integer"
        },
        "framerate": {
          "description": "Video framerate",
          "type": "string"
        },
        "duration": {
          "description": "Video duration",
          "type": "integer"
        },
        "content_length": {
          "description": "Video content length",
          "type": "integer"
        },
        "cancelled": {
          "description": "Cancellation date (e.g. 2016-01-07 20:42:22)",
          "type": "string"
        },
        "message": {
          "description": "Message body",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Response.Thumbnail": {
      "description": "Thumbnail info",
      "required": [
        "url",
        "content_type",
        "width",
        "height"
      ],
      "properties": {
        "url": {
          "description": "URL to thumbnail file",
          "type": "string"
        },
        "content_type": {
          "description": "Thumbnail MIME type (e.g. image/jpeg)",
          "type": "string"
        },
        "width": {
          "description": "Thumbnail width",
          "type": "integer"
        },
        "height": {
          "description": "Thumbnail height",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Response.Buyer": {
      "description": "Member profile info",
      "required": [
        "available_entitlement",
        "member",
        "purchase_options"
      ],
      "properties": {
        "available_entitlement": {
          "$ref": "#/definitions/Response.AvailableEntitlement"
        },
        "member": {
          "$ref": "#/definitions/Response.Member"
        },
        "purchase_options": {
          "$ref": "#/definitions/Response.PurchaseOptions"
        }
      },
      "type": "object"
    },
    "Response.BuyerPurchase": {
      "description": "Member purchase info",
      "required": [
        "member",
        "contents"
      ],
      "properties": {
        "available_entitlement": {
          "$ref": "#/definitions/Response.AvailableEntitlement"
        },
        "member": {
          "$ref": "#/definitions/Response.Member"
        },
        "contents": {
          "$ref": "#/definitions/Response.Contents"
        }
      },
      "type": "object"
    },
    "Response.PurchaseOptions": {
      "description": "Buyer purchase options",
      "required": [
        "state",
        "message"
      ],
      "properties": {
        "state": {
          "description": "Purchase ability state",
          "type": "string",
          "enum": [
            "possible",
            "overage",
            "not_possible"
          ]
        },
        "message": {
          "description": "Extra message",
          "type": "string"
        },
        "url": {
          "description": "Jump URL for users without any available entitlement",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Response.PurchaseStatus": {
      "description": "Product purchase status",
      "required": [
        "order",
        "offering"
      ],
      "properties": {
        "order": {
          "$ref": "#/definitions/Response.Order"
        },
        "product": {
          "$ref": "#/definitions/Response.Product"
        },
        "offering": {
          "$ref": "#/definitions/Response.Offering"
        }
      },
      "type": "object"
    },
    "Response.Offering": {
      "description": "JIL offering",
      "required": [
        "id",
        "price"
      ],
      "properties": {
        "id": {
          "description": "JIL offering id",
          "type": "string"
        },
        "price": {
          "$ref": "#/definitions/Response.MoneyAmount"
        },
        "promotions": {
          "description": "List of available promotions",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Response.Promotion"
          }
        }
      },
      "type": "object"
    },
    "Response.MoneyAmount": {
      "description": "Price",
      "required": [
        "formatted",
        "currency",
        "number"
      ],
      "properties": {
        "formatted": {
          "description": "Formatted price with currency",
          "type": "string"
        },
        "currency": {
          "description": "Currency ISO code",
          "type": "string"
        },
        "number": {
          "description": "Non formatted price number",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Response.Promotion": {
      "description": "Promotion",
      "required": [
        "extended_code"
      ],
      "properties": {
        "code": {
          "description": "Promotion code",
          "type": "string"
        },
        "extended_code": {
          "description": "Promotion extended code",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Response.PurchaseMethod": {
      "description": "Content purchase method",
      "required": [
        "method"
      ],
      "properties": {
        "method": {
          "description": "Purchase method",
          "type": "string",
          "enum": [
            "overage",
            "checkout"
          ]
        }
      },
      "type": "object"
    },
    "Response.OveragePurchase": {
      "description": "Overage purchase data",
      "required": [
        "order",
        "product",
        "member",
        "entitlement",
        "download"
      ],
      "properties": {
        "order": {
          "$ref": "#/definitions/Response.Order"
        },
        "product": {
          "$ref": "#/definitions/Response.Product"
        },
        "offering": {
          "$ref": "#/definitions/Response.Offering"
        },
        "member": {
          "$ref": "#/definitions/Response.ShortMember"
        },
        "entitlement": {
          "$ref": "#/definitions/Response.ShortEntitlement"
        },
        "download": {
          "$ref": "#/definitions/Response.DownloadExtended"
        }
      },
      "type": "object"
    },
    "Response.Order": {
      "description": "Order data",
      "required": [
        "status"
      ],
      "properties": {
        "id": {
          "description": "Internal Adobe order id",
          "type": "string"
        },
        "number": {
          "description": "Public Adobe order number",
          "type": "string"
        },
        "status": {
          "description": "Adobe order status",
          "type": "string",
          "enum": [
            "FULFILLED",
            "FAILED",
            "REVIEW_ACCEPTED",
            "OPEN",
            "UNAUTHORIZED",
            "CANCELLED",
            "FAILED_REVIEW",
            "REVIEW_EXPIRED",
            "IN_REVIEW",
            "IN_REVIEW_NOTIFIED",
            "HELD_OFFLINE_PAYMENT",
            "HELD_UNAUTHORIZED",
            "HELD_FOR_MANUAL_AUTH",
            "SUBMITTED",
            "IN_PROGRESS",
            "PAYPAL_INITIALIZE",
            "VALIDATED",
            "NEW"
          ]
        },
        "date": {
          "$ref": "#/definitions/Response.Date"
        },
        "total": {
          "$ref": "#/definitions/Response.MoneyAmount"
        },
        "subtotal": {
          "$ref": "#/definitions/Response.MoneyAmount"
        },
        "tax": {
          "$ref": "#/definitions/Response.MoneyAmount"
        },
        "savings": {
          "$ref": "#/definitions/Response.MoneyAmount"
        },
        "savings_with_tax": {
          "$ref": "#/definitions/Response.MoneyAmount"
        },
        "promotions": {
          "description": "List of applied promotions",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Response.Promotion"
          }
        }
      },
      "type": "object"
    },
    "Response.Product": {
      "description": "Product",
      "properties": {
        "asset_type": {
          "description": "Internal product type name",
          "type": "string"
        },
        "reference_id": {
          "description": "TypeKit reference id",
          "type": "string"
        },
        "product_key": {
          "description": "Product key",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Response.LinksHref": {
      "description": "Links href",
      "properties": {
        "href": {
          "description": "URL for this resource",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Response.LinksEnvelope": {
      "description": "Links envelope",
      "properties": {
        "self": {
          "$ref": "#/definitions/Response.LinksHref"
        }
      },
      "type": "object"
    },
    "Response.PackQuota": {
      "description": "Quota for a pack",
      "properties": {
        "total": {
          "description": "total quota bought with a credit pack",
          "type": "integer"
        },
        "available": {
          "description": "available quota of a credit pack",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Response.Pack": {
      "description": "Credit pack",
      "properties": {
        "id": {
          "description": "Uuid for credit pack",
          "type": "string"
        },
        "type": {
          "description": "Credit pack type",
          "type": "string"
        },
        "is_free": {
          "description": "Set to true if credit pack was added without an order to eComm",
          "type": "boolean"
        },
        "quota": {
          "$ref": "#/definitions/Response.PackQuota"
        },
        "expiration": {
          "description": "Credit pack expiration timestamp",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Response.ListCredits": {
      "description": "Credit packs",
      "properties": {
        "_links": {
          "$ref": "#/definitions/Response.LinksEnvelope"
        },
        "packs": {
          "description": "List of credit packs",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Response.Pack"
          }
        }
      },
      "type": "object"
    },
    "Response.AddCredits": {
      "description": "Add a free Credit pack",
      "properties": {
        "pack": {
          "$ref": "#/definitions/Response.Pack"
        }
      },
      "type": "object"
    },
    "Response.ReturnCredits": {
      "description": "Voids Credit pack order",
      "properties": {
        "packs": {
          "description": "List of voided credit packs",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Response.Pack"
          }
        }
      },
      "type": "object"
    },
    "Response.PricingInfo": {
      "description": "Pricing Information",
      "properties": {
        "id": {
          "description": "Internal Adobe order id",
          "type": "string"
        },
        "price": {
          "$ref": "#/definitions/Response.MoneyAmount"
        },
        "tax_included": {
          "description": "Is tax included in the price",
          "type": "boolean"
        },
        "is_exclusive_vat": {
          "description": "Price does not include VAT",
          "type": "boolean"
        },
        "is_gst_supported": {
          "description": "Is product subject to goods and services tax",
          "type": "boolean"
        },
        "subtotal": {
          "$ref": "#/definitions/Response.MoneyAmount"
        }
      },
      "type": "object"
    },
    "Response.Licensed_File": {
      "properties": {
        "license": {
          "description": "License type",
          "type": "string"
        },
        "license_date": {
          "description": "License Date",
          "type": "string"
        },
        "download_url": {
          "description": "URL to download the licensed asset",
          "type": "string"
        },
        "id": {
          "description": "Item id",
          "type": "integer"
        },
        "title": {
          "description": "Item title",
          "type": "string"
        },
        "width": {
          "description": "Item width",
          "type": "integer"
        },
        "height": {
          "description": "Item height",
          "type": "integer"
        },
        "creator_name": {
          "description": "Creator name",
          "type": "string"
        },
        "creator_id": {
          "description": "Creator unique id",
          "type": "integer"
        },
        "media_type_id": {
          "description": "Type of media (1 - photo, 2 - illustration, 3 - vector, 4 - video)",
          "type": "integer",
          "enum": [
            1,
            2,
            3,
            4
          ]
        },
        "vector_type": {
          "description": "If the file is a vector indicates if its a svg or a ai/eps (reported as zip)",
          "type": [
            "string",
            "null"
          ]
        },
        "content_type": {
          "description": "Content type of the file (e.g. image/jpeg)",
          "type": "string"
        },
        "thumbnail_url": {
          "description": "Thumbnail URL",
          "type": "string"
        },
        "thumbnail_width": {
          "description": "Thumbnail width",
          "type": "integer"
        },
        "thumbnail_height": {
          "description": "Thumbnail height",
          "type": "integer"
        },
        "details_url": {
          "description": "URL to AdobeStock with content details",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Response.UserLicenseHistory": {
      "description": "Information about the asset attempting to be licensed and the license",
      "required": [
        "files"
      ],
      "properties": {
        "nb_results": {
          "description": "Total number of licenses",
          "type": "integer"
        },
        "files": {
          "description": "Licensed Assets",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Response.Licensed_File"
          }
        }
      },
      "type": "object"
    },
    "Response.UserLicenseHistoryV2": {
      "description": "User's license history response",
      "properties": {
        "_page": {
          "description": "Page information",
          "type": "object",
          "$ref": "#/definitions/Response.PageInformation"
        },
        "results": {
          "description": "License history results",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Response.LicenseHistory"
          }
        }
      },
      "type": "object"
    },
    "Response.LicenseHistory": {
      "description": "License History results",
      "properties": {
        "license": {
          "type": "object",
          "$ref": "#/definitions/Response.LicenseData"
        },
        "creator": {
          "type": "object",
          "$ref": "#/definitions/Response.CreatorData"
        },
        "content": {
          "type": "object",
          "$ref": "#/definitions/Response.ContentData"
        },
        "profile": {
          "type": "object",
          "$ref": "#/definitions/Response.GroupData"
        },
        "reference": {
          "type": "object"
        },
        "stock_id32": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Response.LicenseData": {
      "description": "License information for license history",
      "properties": {
        "creation": {
          "type": "string"
        },
        "generic_type": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "price": {
          "type": "object"
        },
        "can_edit_license_references": {
          "type": "boolean"
        },
        "can_download_content": {
          "type": "boolean"
        },
        "can_license_again": {
          "type": "boolean"
        },
        "can_license_record": {
          "type": "boolean"
        },
        "can_transfer_license": {
          "type": "boolean"
        },
        "license_transfer": {
          "type": "object",
          "$ref": "#/definitions/Response.LicenseTransfer"
        }
      },
      "type": "object"
    },
    "Response.LicenseTransfer": {
      "description": "Information about license transfer",
      "properties": {
        "id": {
          "description": "License transfer id",
          "type": "string"
        },
        "date": {
          "description": "License transfer date",
          "type": "string"
        },
        "client_name": {
          "description": "License transfer client name",
          "type": "string"
        },
        "notes": {
          "description": "License transfer notes",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Response.CreatorData": {
      "description": "Creator information for license history",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Response.ContentData": {
      "description": "Content information for license history",
      "properties": {
        "id": {
          "type": "integer"
        },
        "media_type_id": {
          "type": "integer"
        },
        "height": {
          "type": "integer"
        },
        "width": {
          "type": "integer"
        },
        "content_type": {
          "type": "string"
        },
        "vector_type": {
          "type": "string"
        },
        "download_url": {
          "type": "string"
        },
        "content_url": {
          "type": "string"
        },
        "thumbnails": {
          "type": "object"
        },
        "license_code": {
          "type": "string"
        },
        "audio_file": {
          "type": "string"
        },
        "is_free": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Response.GroupData": {
      "description": "Group (entitlement) information for license history",
      "properties": {
        "group_name": {
          "type": "string"
        },
        "group_user": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Response.PageInformation": {
      "description": "Page information for license history",
      "properties": {
        "count": {
          "type": "integer"
        },
        "page": {
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Response.PLCPermissions": {
      "description": "PLC Permissions",
      "properties": {
        "layout": {
          "type": "string",
          "default": "default"
        },
        "sections": {
          "description": "Permission sections",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Response.PLCPermissionSection"
          }
        }
      },
      "type": "object"
    },
    "Response.PLCPermissionSection": {
      "properties": {
        "id": {
          "description": "Section content id",
          "type": "integer"
        },
        "name": {
          "description": "Section Name",
          "type": "string"
        },
        "description": {
          "description": "Section description",
          "type": "string"
        },
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Response.PLCPermissionsContent"
          }
        }
      },
      "type": "object"
    },
    "Response.PLCPermissionsContent": {
      "properties": {
        "id": {
          "type": "integer",
          "default": "1"
        },
        "name": {
          "type": "string",
          "default": "Asset Types"
        },
        "description": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "expandable"
        },
        "removable": {
          "type": "boolean",
          "default": "false"
        },
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Response.PLCPermissionAssetTypesContent"
          }
        }
      },
      "type": "object"
    },
    "Response.PLCPermissionAssetTypesContent": {
      "properties": {
        "id": {
          "type": "integer",
          "default": "1"
        },
        "type": {
          "type": "string",
          "default": "include"
        },
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Response.PLCPermissionContentValue"
          }
        }
      },
      "type": "object"
    },
    "Response.PLCPermissionContentValue": {
      "properties": {
        "id": {
          "description": "Content type group",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "included": {
          "type": "boolean",
          "default": "true"
        }
      },
      "type": "object"
    },
    "Response.ProductConfiguration": {
      "properties": {
        "id": {
          "description": "Group ID",
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Response.OrganizationQuotasForGroup"
          }
        }
      },
      "type": "object"
    },
    "Response.OrganizationQuotas": {
      "properties": {
        "label": {
          "description": "Item type label",
          "type": "string"
        },
        "type": {
          "description": "Item type",
          "type": "string"
        },
        "totalQuantity": {
          "description": "Total quantity = Total quantity of the organization an admin can see, depending on its admin level (Full Admin: Full organization quota; Profile Admin: quota for the license configuration he administrates)",
          "type": "integer"
        },
        "consumedQuantity": {
          "description": "Consumed quantity = Quantity of quota consumed accross the organization an admin can see, depending on its admin level (Full Admin: Full organization quota; Profile Admin: quota for the license configuration he administrates)",
          "type": "integer"
        },
        "remainingQuantity": {
          "description": "Remaining quantity = Quantity of quota remaining to distribute across the organization an admin can see, depending on its admin level (Full Admin: Full organization quota; Profile Admin: quota for the license configuration he administrates)",
          "type": "integer"
        },
        "distributedQuantity": {
          "description": "Distributed quantity = Quantity of quota distributed across the organization an admin can see, depending on its admin level (Full Admin: Full organization quota; Profile Admin: quota for the license configuration he administrates)",
          "type": "integer"
        },
        "undistributedQuantity": {
          "description": "Undistributed quantity = Quantity of quota undistributed across the organization an admin can see, depending on its admin level (Full Admin: Full organization quota; Profile Admin: quota for the license configuration he administrates)",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Response.OrganizationQuotasForGroup": {
      "properties": {
        "label": {
          "description": "Item type label",
          "type": "string"
        },
        "type": {
          "description": "Item type",
          "type": "string"
        },
        "totalQuantity": {
          "description": "Total quantity = Total quantity of quota for the Product License Configuration selected",
          "type": "integer"
        },
        "consumedQuantity": {
          "description": "Consumed quantity = Quantity of quota consumed for the Product License Configuration selected",
          "type": "integer"
        },
        "remainingQuantity": {
          "description": "Remaining quantity = Quantity of quota remaining to distribute for the Product License Configuration selected",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Response.OrganizationProductQuantities": {
      "properties": {
        "organization_id": {
          "description": "Organization GUID",
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Response.OrganizationQuotas"
          }
        }
      },
      "type": "object"
    },
    "Response.TeamProductQuantities": {
      "properties": {
        "organization_id": {
          "description": "Team GUID",
          "type": "string"
        },
        "product-quantities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Response.TeamProductQuantity"
          }
        }
      },
      "type": "object"
    },
    "Response.TeamProductQuantity": {
      "properties": {
        "id": {
          "description": "JEM license identifier (e.g. 4F5B86E5B82163752DFB)",
          "type": "string"
        },
        "details": {
          "$ref": "#/definitions/Response.TeamProductQuantityDetails"
        }
      },
      "type": "object"
    },
    "Response.TeamProductQuantityDetails": {
      "properties": {
        "label": {
          "description": "Subscription plan title",
          "type": "string"
        },
        "label_localized": {
          "description": "Localized subscription plan title",
          "type": "string"
        },
        "type": {
          "description": "",
          "type": "string"
        },
        "total": {
          "$ref": "#/definitions/Response.ProductQuota"
        },
        "used": {
          "$ref": "#/definitions/Response.ProductQuota"
        },
        "remaining": {
          "$ref": "#/definitions/Response.ProductQuota"
        }
      },
      "type": "object"
    },
    "Response.ProductQuota": {
      "required": [
        "quantity",
        "description"
      ],
      "properties": {
        "quantity": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Response.ListCountries": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "Response.CheckCountry": {
      "properties": {
        "status": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Response.Promo": {
      "required": [
        "partner_user_id",
        "promo_quantity"
      ],
      "properties": {
        "partner_user_id": {
          "type": "string"
        },
        "promo_quantity": {
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Response.Promos": {
      "required": [
        "promos"
      ],
      "properties": {
        "promos": {
          "$ref": "#/definitions/Response.Promo"
        }
      },
      "type": "object"
    },
    "Response.Success": {
      "required": [
        "success"
      ],
      "properties": {
        "success": {
          "$ref": "#/definitions/Response.Success"
        }
      },
      "type": "object"
    },
    "Response.PromoEligible": {
      "description": "Offer content with product key for Adobe Stock Blue Banner Component",
      "required": [
        "text",
        "button_text",
        "responsive_button_text"
      ],
      "properties": {
        "product_key": {
          "description": "CTA product key for eligible offer",
          "type": "string"
        },
        "text": {
          "description": "Banner Text",
          "type": "string"
        },
        "button_text": {
          "description": "Banner CTA button text",
          "type": "string"
        },
        "responsive_button_text": {
          "description": "Banner CTA button text for small width display",
          "type": "string"
        },
        "button_link": {
          "description": "CTA redirect link",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Response.AccessToken": {
      "properties": {
        "access_token": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Response.LicenseCodeValidation": {
      "properties": {
        "code": {
          "description": "License code",
          "type": "string"
        },
        "is_valid": {
          "description": "True if the passed in license code is valid",
          "type": "boolean"
        },
        "member_id": {
          "description": "Content member id. If null, then the license code is invalid",
          "type": [
            "integer",
            "null"
          ]
        },
        "asset_id": {
          "description": "Partner asset id. If null, then the license code is invalid",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "type": "object"
    },
    "Response.FilesPreviews": {
      "required": [
        "files"
      ],
      "properties": {
        "nb_results": {
          "description": "Total number of media files found",
          "type": "integer"
        },
        "files": {
          "description": "Media files",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Response.FilesPreviewsList"
          }
        }
      },
      "type": "object"
    },
    "Response.FilesPreviewsList": {
      "properties": {
        "id": {
          "description": "Item id",
          "type": "integer"
        },
        "download_url": {
          "description": "Download URL",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Response.EnterpriseLicenseTerms": {
      "required": [
        "assets"
      ],
      "properties": {
        "currency": {
          "description": "Currency Data",
          "items": {
            "$ref": "#/definitions/Response.EnterpriseLicenseTermsCurrency"
          }
        },
        "assets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Response.EnterpriseLicenseTermsAsset"
          }
        }
      },
      "type": "object"
    },
    "Response.EnterpriseLicenseTermsCurrency": {
      "required": [
        "type",
        "value"
      ],
      "properties": {
        "type": {
          "description": "Currency Type (e.g. USD)",
          "type": "string"
        },
        "value": {
          "description": "Currency Value",
          "type": "number"
        }
      },
      "type": "object"
    },
    "Response.EnterpriseLicenseTermsAsset": {
      "required": [
        "assetId",
        "licenseId",
        "price"
      ],
      "properties": {
        "assetId": {
          "description": "Asset Id (e.g microstock, video_hd)",
          "type": "string"
        },
        "licenseId": {
          "description": "License Id (e.g standard, extended, internal_use_only)",
          "type": "string"
        },
        "price": {
          "$ref": "#/definitions/Response.EnterpriseLicenseTermsAssetPrice"
        }
      },
      "type": "object"
    },
    "Response.EnterpriseLicenseTermsAssetPrice": {
      "required": [
        "type",
        "quotaType"
      ],
      "properties": {
        "type": {
          "description": "Price type (e.g fixed, variable)",
          "type": "string"
        },
        "quotaType": {
          "description": "Price Quota type (e.g credit, premium_credit, image, unlimited)",
          "type": "string"
        },
        "value": {
          "description": "Price value, available when price type fixed",
          "type": "integer"
        },
        "min": {
          "description": "Price minimum value, available when price type variable",
          "type": "integer"
        },
        "max": {
          "description": "Price maximum value, available when price type variable",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Response.EnterpriseMemberAdminRoles": {
      "properties": {
        "{organization_id}": {
          "description": "Id of the organization",
          "type": "object",
          "$ref": "#/definitions/Response.EnterpriseMemberAdminRolesOrganizationId"
        }
      },
      "type": "object"
    },
    "Response.EnterpriseMemberAdminRolesOrganizationId": {
      "required": [
        "name",
        "profiles"
      ],
      "properties": {
        "name": {
          "description": "Organization name",
          "type": "string"
        },
        "guid": {
          "description": "Organization GUID",
          "type": "string"
        },
        "role": {
          "description": "Member admin role in the organization e.g. org_admin or PRODUCT_ADMIN",
          "type": "string"
        },
        "profiles": {
          "description": "Organization profiles where member is profile admin",
          "type": "object",
          "$ref": "#/definitions/Response.EnterpriseMemberAdminRolesProfiles"
        }
      },
      "type": "object"
    },
    "Response.EnterpriseMemberAdminRolesProfiles": {
      "properties": {
        "{entitlement_id}": {
          "type": "object",
          "$ref": "#/definitions/Response.EnterpriseMemberAdminRolesProfileId"
        }
      },
      "type": "object"
    },
    "Response.EnterpriseMemberAdminRolesProfileId": {
      "required": [
        "name",
        "role"
      ],
      "properties": {
        "name": {
          "description": "Profile name",
          "type": "string"
        },
        "guid": {
          "description": "Profile GUID",
          "type": "string"
        },
        "role": {
          "description": "Profile admin role e.g. user_admin_grp",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Response.Offers": {
      "description": "Available Stock offers according to the given criteria/workflow.",
      "required": [
        "name",
        "commitment",
        "product_arrangement_code",
        "offer_id",
        "offer_type",
        "product_key",
        "number_of_asset",
        "country",
        "price",
        "price_pattern",
        "currency_iso_code",
        "currency_symbol",
      ],
      "properties": {
        "name": {
          "description": "Name of the offer",
          "type": "string"
        },
        "commitment": {
          "description": "Commitment: Yearly or Monthly",
          "type": "string"
        },
        "product_arrangement_code": {
          "description": "Product Arrangement Code",
          "type": "string"
        },
        "offer_id": {
          "description": "ID corresponding to the offer, required when placing an order through CCS",
          "type": "string"
        },
        "offer_type": {
          "description": "Type of offer",
          "type": "string"
        },
        "product_key": {
          "description": "Product key",
          "type": "string"
        },
        "number_of_asset": {
          "description": "Number of assets that can be licensed with the offer",
          "type": "string"
        },
        "country": {
          "description": "Country",
          "type": "string"
        },
        "price": {
          "description": "Price of the offer",
          "type": "string"
        },
        "price_pattern": {
          "description": "Price format",
          "type": "string"
        },
        "currency_iso_code": {
          "description": "Currency ISO code",
          "type": "string"
        },
        "currency_symbol": {
          "description": "Currency symbol",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Template": {
      "description": "Template details",
      "properties": {
        "id": {
          "description": "Retrieve templates from Adobe Stock.\n\nRetrieve templates. See <a href='https://wiki.corp.adobe.com/display/adobestock/Template+Search+API'>the design document</a> for more details.",
          "type": "integer"
        },
        "title": {
          "description": "Retrieve templates from Adobe Stock.\n\nRetrieve templates. See <a href='https://wiki.corp.adobe.com/display/adobestock/Template+Search+API'>the design document</a> for more details.",
          "type": "string"
        },
        "description": {
          "description": "Retrieve templates from Adobe Stock.\n\nRetrieve templates. See <a href='https://wiki.corp.adobe.com/display/adobestock/Template+Search+API'>the design document</a> for more details.",
          "type": "string"
        },
        "marketing_text": {
          "description": "Retrieve templates from Adobe Stock.\n\nRetrieve templates. See <a href='https://wiki.corp.adobe.com/display/adobestock/Template+Search+API'>the design document</a> for more details.",
          "type": [
            "string",
            "null"
          ]
        },
        "thumbnail_url": {
          "description": "Retrieve templates from Adobe Stock.\n\nRetrieve templates. See <a href='https://wiki.corp.adobe.com/display/adobestock/Template+Search+API'>the design document</a> for more details.",
          "type": "string"
        },
        "width": {
          "description": "Retrieve templates from Adobe Stock.\n\nRetrieve templates. See <a href='https://wiki.corp.adobe.com/display/adobestock/Template+Search+API'>the design document</a> for more details.",
          "type": "number"
        },
        "height": {
          "description": "Retrieve templates from Adobe Stock.\n\nRetrieve templates. See <a href='https://wiki.corp.adobe.com/display/adobestock/Template+Search+API'>the design document</a> for more details.",
          "type": "number"
        },
        "units": {
          "description": "Retrieve templates from Adobe Stock.\n\nRetrieve templates. See <a href='https://wiki.corp.adobe.com/display/adobestock/Template+Search+API'>the design document</a> for more details.",
          "type": [
            "string",
            "null"
          ]
        },
        "resolution": {
          "description": "Retrieve templates from Adobe Stock.\n\nRetrieve templates. See <a href='https://wiki.corp.adobe.com/display/adobestock/Template+Search+API'>the design document</a> for more details.",
          "type": [
            "string",
            "null"
          ]
        },
        "mime_type": {
          "description": "Retrieve templates from Adobe Stock.\n\nRetrieve templates. See <a href='https://wiki.corp.adobe.com/display/adobestock/Template+Search+API'>the design document</a> for more details.",
          "type": "string"
        },
        "size": {
          "description": "Retrieve templates from Adobe Stock.\n\nRetrieve templates. See <a href='https://wiki.corp.adobe.com/display/adobestock/Template+Search+API'>the design document</a> for more details.",
          "type": "integer"
        },
        "price_prompt": {
          "description": "Retrieve templates from Adobe Stock.\n\nRetrieve templates. See <a href='https://wiki.corp.adobe.com/display/adobestock/Template+Search+API'>the design document</a> for more details.",
          "type": "string"
        },
        "template_category": {
          "description": "Retrieve templates from Adobe Stock.\n\nRetrieve templates. See <a href='https://wiki.corp.adobe.com/display/adobestock/Template+Search+API'>the design document</a> for more details.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "previews": {
          "description": "Retrieve templates from Adobe Stock.\n\nRetrieve templates. See <a href='https://wiki.corp.adobe.com/display/adobestock/Template+Search+API'>the design document</a> for more details.",
          "type": "array",
          "items": {
            "required": [
              "url"
            ],
            "properties": {
              "url": {
                "description": "preview thumbnail url",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "contributor_url": {
          "description": "Retrieve templates from Adobe Stock.\n\nRetrieve templates. See <a href='https://wiki.corp.adobe.com/display/adobestock/Template+Search+API'>the design document</a> for more details.",
          "type": "string"
        },
        "contributor_name": {
          "description": "Retrieve templates from Adobe Stock.\n\nRetrieve templates. See <a href='https://wiki.corp.adobe.com/display/adobestock/Template+Search+API'>the design document</a> for more details.",
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "Parameter.Header.Product": {
      "name": "X-Product",
      "in": "header",
      "description": "The X-Product is required to identify the calling product and should always contain a version. The productID should be the IMS clientID if possible. Example: Photoshop/15.2.0",
      "required": true,
      "type": "string"
    },
    "Parameter.Header.Product.Optional": {
      "name": "X-Product",
      "in": "header",
      "description": "The X-Product is required to identify the calling product and should always contain a version. The productID should be the IMS clientID if possible. Example: Photoshop/15.2.0",
      "required": false,
      "type": "string"
    },
    "Parameter.Header.ProductLocation": {
      "name": "X-Product-Location",
      "in": "header",
      "description": "The X-Product-Location header is optional and used to identify a location within a product where the call was made. The version is optional. Example: Libraries/1.0.0 or Hello",
      "required": false,
      "type": "string"
    },
    "Parameter.Header.RequestId": {
      "name": "X-Request-Id",
      "in": "header",
      "description": "Request Identifier used to trace the request in logs.",
      "required": false,
      "type": "string"
    },
    "Parameter.Header.ApiKey": {
      "name": "X-Api-Key",
      "in": "header",
      "description": "API key",
      "required": false,
      "type": "string"
    },
    "Parameter.Header.Authorization.Optional": {
      "name": "Authorization",
      "in": "header",
      "description": "IMS access token (format: Bearer xxxxxxxxxx)",
      "required": false,
      "type": "string"
    },
    "Parameter.Header.Authorization.Required": {
      "name": "Authorization",
      "in": "header",
      "description": "IMS access token (format: Bearer xxxxxxxxxx)",
      "required": true,
      "type": "string"
    },
    "Parameter.Header.Vendor": {
      "name": "X-Vendor",
      "in": "header",
      "description": "Symbolic vendor id.",
      "required": true,
      "type": "string"
    },
    "Parameter.Get.ContentId": {
      "name": "content_id",
      "in": "query",
      "description": "Content id (aka file id) (e.g. 66926921)",
      "required": true,
      "type": "string"
    },
    "Parameter.Get.ContentId.Optional": {
      "name": "content_id",
      "in": "query",
      "description": "Content id (aka file id) (e.g. 66926921)",
      "required": false,
      "type": "string"
    },
    "Parameter.Post.ContentId": {
      "name": "content_id",
      "in": "formData",
      "description": "Content id (aka file id) (e.g. 66926921)",
      "required": true,
      "type": "string"
    },
    "Parameter.Post.ContentId.Optional": {
      "name": "content_id",
      "in": "formData",
      "description": "Content id (aka file id) (e.g. 66926921)",
      "required": false,
      "type": "integer"
    },
    "Parameter.Get.EntitlementId": {
      "name": "entitlement_id",
      "in": "query",
      "description": "Entitlement id (e.g. 6537)",
      "required": true,
      "type": "integer"
    },
    "Parameter.Post.EntitlementId": {
      "name": "entitlement_id",
      "in": "formData",
      "description": "Entitlement id (e.g. 6537)",
      "required": true,
      "type": "integer"
    },
    "Parameter.Path.EntitlementId": {
      "name": "entitlement_id",
      "in": "path",
      "description": "Entitlement id (e.g. 6537)",
      "required": true,
      "type": "integer"
    },
    "Parameter.Path.FotoliaMemberId": {
      "name": "fotolia_member_id",
      "in": "path",
      "description": "Fotolia member id (e.g. 42098)",
      "required": true,
      "type": "integer"
    },
    "Parameter.Get.PageNumber": {
      "name": "page",
      "in": "query",
      "description": "Page number",
      "required": false,
      "type": "integer"
    },
    "Parameter.Get.CategoryId": {
      "name": "category_id",
      "in": "query",
      "description": "Category id (e.g. 614)",
      "required": true,
      "type": "string"
    },
    "Parameter.Post.AllotmentId": {
      "name": "allotment_id",
      "in": "formData",
      "description": "Allotment id (e.g. 13360)",
      "required": true,
      "type": "integer"
    },
    "Parameter.Get.MemberGuid": {
      "name": "guid",
      "in": "query",
      "description": "Member GUID (e.g. EBB978DB554BC9237F000101@AdobeID)",
      "required": false,
      "type": "string"
    },
    "Parameter.Post.MemberEntityRef": {
      "name": "member_entity_ref",
      "in": "formData",
      "description": "Member GUID (e.g. EBB978DB554BC9237F000101@AdobeID)",
      "required": true,
      "type": "string"
    },
    "Parameter.Get.FulfillmentMethod": {
      "name": "fulfillment_method",
      "in": "query",
      "description": "Order fulfillment method (to detect right offering)",
      "required": true,
      "type": "string",
      "default": "STOCK_DEMAND",
      "enum": [
        "STOCK_DEMAND",
        "STOCK_OVERAGE"
      ]
    },
    "Parameter.Get.License": {
      "name": "license",
      "in": "query",
      "description": "License type",
      "required": false,
      "type": "string",
      "default": "Standard",
      "enum": [
        "Standard",
        "Extended",
        "Video_HD",
        "Video_4K",
        "Standard_M",
        "Enhanced"
      ]
    },
    "Parameter.Post.License": {
      "name": "license",
      "in": "formData",
      "description": "License type",
      "required": false,
      "type": "string",
      "default": "Standard",
      "enum": [
        "Standard",
        "Extended",
        "Video_HD",
        "Video_4K",
        "Standard_M",
        "Enhanced"
      ]
    },
    "Parameter.Get.Locale": {
      "name": "locale",
      "in": "query",
      "description": "Locale",
      "required": false,
      "type": "string",
      "default": "en_US",
      "pattern": "^[a-zA-Z]{2,3}([-_][a-zA-Z]{2,3})?$"
    },
    "Parameter.Post.Locale": {
      "name": "locale",
      "in": "formData",
      "description": "Locale",
      "required": false,
      "type": "string",
      "default": "en_US",
      "pattern": "^[a-zA-Z]{2,3}([-_][a-zA-Z]{2,3})?$"
    },
    "Parameter.Get.ProductKey": {
      "name": "product_key",
      "in": "query",
      "description": "Product key (e.g. /Applications/StockPT11)",
      "required": true,
      "type": "string"
    },
    "Parameter.Post.ProductKey": {
      "name": "product_key",
      "in": "formData",
      "description": "Product key (e.g. /Applications/StockPT11)",
      "required": true,
      "type": "string"
    },
    "Parameter.Post.ReferenceId": {
      "name": "reference_id",
      "in": "formData",
      "description": "External transaction reference",
      "required": true,
      "type": "string"
    },
    "Parameter.Post.ReferenceId.Optional": {
      "name": "reference_id",
      "in": "formData",
      "description": "External transaction reference",
      "required": false,
      "type": "string"
    },
    "Parameter.Get.ReferenceId": {
      "name": "reference_id",
      "in": "query",
      "description": "External transaction reference",
      "required": true,
      "type": "string"
    },
    "Parameter.Get.ReferenceId.Optional": {
      "name": "reference_id",
      "in": "query",
      "description": "External transaction reference",
      "required": false,
      "type": "string"
    },
    "Parameter.Get.Country": {
      "name": "country",
      "in": "query",
      "description": "Country ISO code",
      "required": false,
      "type": "string",
      "default": "US",
      "enum": [
        "AT",
        "AU",
        "BE",
        "BG",
        "CA",
        "CH",
        "CY",
        "CZ",
        "DK",
        "EE",
        "ES",
        "FI",
        "FR",
        "DE",
        "GB",
        "GR",
        "HU",
        "IE",
        "IT",
        "JP",
        "LV",
        "LT",
        "LU",
        "MT",
        "NL",
        "NO",
        "NZ",
        "PL",
        "PT",
        "RO",
        "SE",
        "SI",
        "SK",
        "US",
        "ZA",
        "MX"
      ]
    },
    "Parameter.Post.NbLicenses": {
      "name": "nb_licenses",
      "in": "formData",
      "description": "Number of Licenses. (e.g. 10)",
      "required": true,
      "type": "integer",
      "maximum": 50,
      "minimum": 1
    },
    "Parameter.Post.EntitlementGuid": {
      "name": "entitlement_guid",
      "in": "formData",
      "description": "Entitlement GUID (e.g. EBB978DB554BC9237F000101@AdobeOrg)",
      "type": "string"
    },
    "Parameter.Post.PurchaseMethod": {
      "name": "purchase_method",
      "in": "formData",
      "description": "Member purchase method",
      "required": true,
      "type": "string",
      "enum": [
        "checkout",
        "overage"
      ]
    },
    "Parameter.Path.OrganizationGuid": {
      "name": "organization_guid",
      "in": "path",
      "description": "Organization guid",
      "required": true,
      "type": "string"
    },
    "Parameter.Path.EntityRef": {
      "name": "entity_ref",
      "in": "path",
      "description": "Entity reference (aka organization/team/member guid)",
      "required": true,
      "type": "string"
    },
    "Parameter.Get.Size": {
      "name": "size",
      "in": "query",
      "description": "Size of licensed asset",
      "required": false,
      "type": "string"
    },
    "Parameter.Get.limit": {
      "name": "limit",
      "in": "query",
      "description": "The number of license histories to be returned",
      "type": "integer"
    },
    "Parameter.Get.DateOrder": {
      "name": "date_order",
      "in": "query",
      "description": "Desc or Asc order value for the date",
      "type": "string"
    },
    "Parameter.Get.Order": {
      "name": "order",
      "in": "query",
      "description": "Desc or Asc order value of the order_type filed",
      "type": "string"
    },
    "Parameter.Get.OrderType": {
      "name": "order_type",
      "in": "query",
      "description": "The field to order",
      "type": "string"
    },
    "Parameter.Get.OrganizationMode": {
      "name": "organization_mode",
      "in": "query",
      "description": "Flag to retrieve licenses data only for organization entitlements",
      "type": "boolean"
    },
    "Parameter.Get.OrganizationId": {
      "name": "organization_id",
      "in": "query",
      "description": "Organization id to retrieve license data from",
      "type": "integer"
    },
    "Parameter.Get.FilterStartingDate": {
      "name": "filters[starting_date]",
      "in": "query",
      "description": "Starting date filter for the query",
      "type": "string"
    },
    "Parameter.Get.FilterEndingDate": {
      "name": "filters[ending_date]",
      "in": "query",
      "description": "Ending date filter for the query",
      "type": "string"
    },
    "Parameter.Get.FilterContentType": {
      "name": "filters[content_type][]",
      "in": "query",
      "description": "Content Type filter for the licenses query",
      "type": "array",
      "items": {
        "type": "string"
      },
      "collectionFormat": "multi"
    },
    "Parameter.Get.FilterGenericLicense": {
      "name": "filters[generic_licenses][]",
      "in": "query",
      "description": "Generic Licenses filter for the licenses query",
      "type": "array",
      "items": {
        "type": "string"
      },
      "collectionFormat": "multi"
    },
    "Parameter.Get.FilterGroup": {
      "name": "filters[groups][]",
      "in": "query",
      "description": "Profile name filter for the licenses query",
      "type": "array",
      "items": {
        "type": "string"
      },
      "collectionFormat": "multi"
    },
    "Parameter.Get.FilterUsers": {
      "name": "filters[users][]",
      "in": "query",
      "description": "Users filter for the licenses query",
      "type": "array",
      "items": {
        "type": "string"
      },
      "collectionFormat": "multi"
    },
    "Parameter.Get.FilterProjectName": {
      "name": "filters[license_ref][project_name][]",
      "in": "query",
      "description": "Project name filter for the licenses query",
      "type": "array",
      "items": {
        "type": "string"
      },
      "collectionFormat": "multi"
    },
    "Parameter.Get.FilterProjectRef": {
      "name": "filters[license_ref][project_reference][]",
      "in": "query",
      "description": "Project reference filter for the licenses query",
      "type": "array",
      "items": {
        "type": "string"
      },
      "collectionFormat": "multi"
    },
    "Parameter.Get.FilterCustomerName": {
      "name": "filters[license_ref][customer_name][]",
      "in": "query",
      "description": "Customer name filter for the licenses query",
      "type": "array",
      "items": {
        "type": "string"
      },
      "collectionFormat": "multi"
    },
    "Parameter.Get.FilterCustomerReference": {
      "name": "filters[license_ref][customer_reference][]",
      "in": "query",
      "description": "Customer reference filter for the licenses query",
      "type": "array",
      "items": {
        "type": "string"
      },
      "collectionFormat": "multi"
    },
    "Parameter.Get.FilterCostCenter": {
      "name": "filters[license_ref][cost_center][]",
      "in": "query",
      "description": "Cost center filter for the licenses query",
      "type": "array",
      "items": {
        "type": "string"
      },
      "collectionFormat": "multi"
    },
    "Parameter.Get.FilterPurchaseOrder": {
      "name": "filters[license_ref][purchase_order][]",
      "in": "query",
      "description": "Command number filter for the licenses query",
      "type": "array",
      "items": {
        "type": "string"
      },
      "collectionFormat": "multi"
    },
    "Parameter.Get.FilterIsbn": {
      "name": "filters[license_ref][isbn][]",
      "in": "query",
      "description": "ISBN filter for the licenses query",
      "type": "array",
      "items": {
        "type": "string"
      },
      "collectionFormat": "multi"
    },
    "Parameter.Get.FilterDepartment": {
      "name": "filters[license_ref][department][]",
      "in": "query",
      "description": "Department filter for the licenses query",
      "type": "array",
      "items": {
        "type": "string"
      },
      "collectionFormat": "multi"
    },
    "Parameter.Get.FilterCountry": {
      "name": "filters[license_ref][country][]",
      "in": "query",
      "description": "Country filter for the licenses query",
      "type": "array",
      "items": {
        "type": "string"
      },
      "collectionFormat": "multi"
    }
  }
}
